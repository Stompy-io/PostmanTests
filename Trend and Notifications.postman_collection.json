{
	"info": {
		"_postman_id": "dc032bca-a9b7-4a41-a06b-bb2a4d2d62c7",
		"name": "Trend and Notifications",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get health check",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"HTTP status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Status code is 0\", function () {",
							"    pm.expect(pm.response.json()['code']).equals(0);",
							"});",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.json()['msg']).to.equal( \"hello world\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "MyUniqueApiKey",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}",
					"host": [
						"{{host}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "login /login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"HTTP status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Status code is 0\", function () {",
							"    pm.expect(pm.response.json()['code']).to.equal(0);",
							"});",
							"pm.environment.set(\"org_id\", pm.response.json()['data']['org_id']);",
							"pm.environment.set(\"scc_id\", pm.response.json()['data']['scc_id']);",
							"pm.environment.set(\"ecs_id\", pm.response.json()['data']['ecs_id']);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"cavemoh105@64ge.com\", \n    \"password\": \"Secret123!\", \n    \"auto_login\": true\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/login",
					"host": [
						"{{host}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Trend Diagram & Event Table /trend_diagram",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"HTTP status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Status code is 0\", function () {",
							"    pm.expect(pm.response.json()['code']).to.equal(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"scc_id\": {{scc_id}}, \n    \"org_id\": \"{{org_id}}\", \n    \"ecs_id\": \"{{ecs_id}}\",\n    \"st_dtm\": \"2021-01-01\",\n    \"nd_dtm\": \"2021-03-31\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/trend_diagram",
					"host": [
						"{{host}}"
					],
					"path": [
						"trend_diagram"
					]
				}
			},
			"response": []
		},
		{
			"name": "View Listeners /view_listeners",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"HTTP status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Status code is 0\", function () {",
							"    pm.expect(pm.response.json()['code']).to.equal(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"scc_id\": {{scc_id}}, \n    \"org_id\": \"{{org_id}}\", \n    \"ecs_id\": \"{{ecs_id}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/view_listeners",
					"host": [
						"{{host}}"
					],
					"path": [
						"view_listeners"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Instance Tags When Listener Definition /get_instance_tags",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"HTTP status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Status code is 0\", function () {",
							"    pm.expect(pm.response.json()['code']).to.equal(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"scc_id\": {{scc_id}}, \n    \"org_id\": \"{{org_id}}\", \n    \"ecs_id\": \"{{ecs_id}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/get_instance_tags",
					"host": [
						"{{host}}"
					],
					"path": [
						"get_instance_tags"
					]
				}
			},
			"response": []
		},
		{
			"name": "Define Listener /define_listener",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"HTTP status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Status code is 0\", function () {",
							"    pm.expect(pm.response.json()['code']).to.equal(0);",
							"});",
							"pm.environment.set(\"listenerId\", pm.response.json()['data']['listener_id']);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"listenerName\", \"sampleListener\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"scc_id\": {{scc_id}}, \n    \"org_id\": \"{{org_id}}\", \n    \"ecs_id\": \"{{ecs_id}}\",\n    \"listener\": {\n        \"biz\": \"AWS\",\n        \"description\": \"\",\n        \"inc_only\": true,\n        \"name\": \"{{listenerName}}\",\n        \"scope\": \"Weekly\",\n        \"tag_key\": \"Name\",\n        \"tag_val\": \"Hello\",\n        \"threshold\": \"10\",\n        \"username\": \"spt\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/define_listener",
					"host": [
						"{{host}}"
					],
					"path": [
						"define_listener"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit Listener /edit_listener",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"HTTP status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Status code is 0\", function () {",
							"    pm.expect(pm.response.json()['code']).to.equal(0);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"newListenerName\", \"editedListener\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"scc_id\": {{scc_id}}, \n    \"org_id\": \"{{org_id}}\", \n    \"ecs_id\": \"{{ecs_id}}\",\n    \"listener\": {\n        \"biz\": \"AWS\",\n        \"created_utm\": 1619663407,\n        \"description\": \"\",\n        \"id\": \"{{listenerId}}\",\n        \"inc_only\": 1,\n        \"name\": \"{{newListenerName}}\",\n        \"scope\": \"Weekly\",\n        \"status\": \"ON\",\n        \"tag_key\": \"Name\",\n        \"tag_val\": \"Hello\",\n        \"threshold\": 10,\n        \"username\": \"spt\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/edit_listener",
					"host": [
						"{{host}}"
					],
					"path": [
						"edit_listener"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Listener delete_listener",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"HTTP status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Status code is 0\", function () {",
							"    pm.expect(pm.response.json()['code']).to.equal(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"scc_id\": {{scc_id}}, \n    \"org_id\": \"{{org_id}}\", \n    \"ecs_id\": \"{{ecs_id}}\",\n    \"listener_id\": \"aa037aba61ee2aaebb96170e4b5778ed\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/delete_listener",
					"host": [
						"{{host}}"
					],
					"path": [
						"delete_listener"
					]
				}
			},
			"response": []
		},
		{
			"name": "Spend Analysis /spend_analysis",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"HTTP status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Status code is 0\", function () {",
							"    pm.expect(pm.response.json()['code']).to.equal(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"ecs_id\": \"{{ecs_id}}\",\n    \"org_id\": \"{{org_id}}\",\n    \"params\": {\n        \"Granularity\": \"MONTHLY\",\n        \"GroupBy\": [{\"Type\": \"DIMENSION\", \"Key\": \"LINKED_ACCOUNT\"}],\n        \"Metrics\": [\"BLENDED_COST\", \"AMORTIZED_COST\"],\n        \"TimePeriod\": {\n            \"End\": \"2021-05-01\",\n            \"Start\": \"2020-11-01\"\n        }\n        \n    },\n    \"scc_id\": {{scc_id}}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/spend_analysis",
					"host": [
						"{{host}}"
					],
					"path": [
						"spend_analysis"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "http://v1.flask.api.stompy.io"
		}
	]
}