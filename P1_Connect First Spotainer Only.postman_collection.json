{
	"info": {
		"_postman_id": "329a1908-a03a-4ab0-ab31-b9c1309545c9",
		"name": "P1_Connect First Spotainer Only",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Make a new account",
			"item": [
				{
					"name": "Sent Code Register",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const test_mail_pairs = [['grhng','b3973677-a2e5-4afd-95e5-2c56fbffe501'],",
									"                    ['z4hqx', 'd757bd5c-ec29-43ba-9a71-e489f3ebd41b'],",
									"                    ['29z7n', 'cb5e5893-8022-4101-b082-f9e4d210e1a8'],",
									"                    ['jzpwr', 'efde665c-1ccd-4531-8113-dfaacd2d7dc5'],",
									"                    ['klild', 'e751c3aa-4d29-4178-b2d8-057cb0c23a67']]",
									"const index = Math.floor(Math.random()*(test_mail_pairs.length));",
									"const namespace = test_mail_pairs[index][0];",
									"pm.environment.set('test_email_namespace', namespace);",
									"pm.environment.set('test_email_api_key', test_mail_pairs[index][1]);",
									"const email = namespace+\".\" + pm.variables.replaceIn('{{$guid}}') +'.temp'+ pm.variables.get(\"test_email_domain\");",
									"pm.environment.set(\"currentEmail\", email);",
									"pm.environment.set(\"timeStamp\", pm.variables.replaceIn('{{$timestamp}}').concat('000'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"pm.test(\"result is email sent success\", ()=>{",
									"    pm.expect(pm.response.json().results).to.equal('The Email has been sent successfully！');",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host_user}}/auth/users/send_code/?email_to={{currentEmail}}&operation=register",
							"host": [
								"{{host_user}}"
							],
							"path": [
								"auth",
								"users",
								"send_code",
								""
							],
							"query": [
								{
									"key": "email_to",
									"value": "{{currentEmail}}"
								},
								{
									"key": "operation",
									"value": "register"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get VRFCode From Email",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const html_str = pm.response.json()['emails'][0]['html'];",
									"html_str.replace(/\\/n/, '');",
									"const $ = cheerio.load(html_str);",
									"const v_code = $('#vrf_code').text()",
									"pm.test(\"Verification Code is 6-digit\", ()=>{",
									"    pm.expect(v_code).to.match(/^\\d{6}$/);",
									"})",
									"pm.environment.set(\"vrf_code\", v_code)",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{test_email_api}}?apikey={{test_email_api_key}}&namespace={{test_email_namespace}}&timestamp_from={{timeStamp}}&livequery=true",
							"protocol": "https",
							"host": [
								"{{test_email_api}}"
							],
							"query": [
								{
									"key": "apikey",
									"value": "{{test_email_api_key}}"
								},
								{
									"key": "namespace",
									"value": "{{test_email_namespace}}"
								},
								{
									"key": "timestamp_from",
									"value": "{{timeStamp}}"
								},
								{
									"key": "livequery",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Register",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"first_name\", pm.variables.replaceIn('{{$randomFirstName}}'));",
									"pm.environment.set('currentPassword', pm.variables.replaceIn('{{$randomPassword}}'))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"});",
									"pm.test(\"result is email sent success\", () => {",
									"    pm.expect(pm.response.json().results).to.equal('Successful Create User.');",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "first_name",
									"value": "{{first_name}}",
									"type": "text"
								},
								{
									"key": "organization",
									"value": "Stompy",
									"type": "text"
								},
								{
									"key": "email",
									"value": "{{currentEmail}}",
									"type": "text"
								},
								{
									"key": "vrf_code",
									"value": "{{vrf_code}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{currentPassword}}",
									"type": "text"
								},
								{
									"key": "re_password",
									"value": "{{currentPassword}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host_user}}/auth/users/register/",
							"host": [
								"{{host_user}}"
							],
							"path": [
								"auth",
								"users",
								"register",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Has Access\", () => {",
									"    pm.expect(pm.response.json()).to.have.property(\"access\");",
									"});",
									"pm.test(\"Has Refresh\", () => {",
									"    pm.expect(pm.response.json()).to.have.property(\"refresh\");",
									"});",
									"",
									"",
									"function parseJwt(token) {",
									"    var base64Payload = token.split('.')[1];",
									"    var payload = Buffer.from(base64Payload, 'base64');",
									"    return JSON.parse(payload.toString());",
									"}",
									"let payload = parseJwt(pm.response.json().access);",
									"pm.environment.set('test_user_id', payload.user_id);",
									"pm.environment.set('test_access', 'JWT ' + pm.response.json().access);",
									"pm.environment.set('test_refresh', pm.response.json().refresh);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "{{currentEmail}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{currentPassword}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host_user}}/auth/jwt/create/",
							"host": [
								"{{host_user}}"
							],
							"path": [
								"auth",
								"jwt",
								"create",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "users get org id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"HTTP status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"response has same id as request\", function () {",
									"   pm.expect(pm.response.json().id).to.equal(pm.environment.get('test_user_id'))",
									"});",
									"",
									"pm.test(\"response has email, role\", function () {",
									"   pm.expect(pm.response.json()).to.have.all.keys([\"email\", 'username','id', 'role', 'organization']);",
									"  ",
									"});",
									"pm.environment.set('test_org_id', pm.response.json().organization);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{test_access}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host_user}}/users/{{test_user_id}}/",
							"host": [
								"{{host_user}}"
							],
							"path": [
								"users",
								"{{test_user_id}}",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Spotainer Only",
			"item": [
				{
					"name": "Save New ECS Account Incorrect",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"HTTP status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"analyzer_arn is Invalid ARN\", function () {",
									"    pm.expect(pm.response.json()['spotainer_arn'][0]).to.equal(\"Invalid ARN\");",
									"    ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{test_access}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"organization\": \"{{test_org_id}}\",\n    \"bucket\": \"{{bucketName}}\",\n    \"spotainer_arn\": \"junk\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host_user}}/cloud-accounts/",
							"host": [
								"{{host_user}}"
							],
							"path": [
								"cloud-accounts",
								""
							]
						}
					},
					"response": [
						{
							"name": "Save New ECS Account",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"1564894\",\n    \"organization\": \"152\",\n    \"bucket\": \"{{bucketName}}\",\n    \"arn\": \"{{testARN}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host_user}}/cloud-accounts/",
									"host": [
										"{{host_user}}"
									],
									"path": [
										"cloud-accounts",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "173"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Date",
									"value": "Thu, 01 Jul 2021 07:54:01 GMT"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "81fa75fc-b7b4-43a1-a13b-9ce528d4ba5b"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "x-amzn-Remapped-Content-Length",
									"value": "186"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "Bx8nlHJ1SQ0FfCg="
								},
								{
									"key": "Vary",
									"value": "Accept, Origin"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-60dd7496-1a9d36181e8dd63378e023f7;Sampled=1"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "Via",
									"value": "1.1 6ff363ba56d3f8161f6692bcccc7a36d.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "LAX50-C3"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "6bdYkBKaCRvPem0kYLfR4IDQp-hTrz7GDxPa7poxEKxWYWbxuV3wSA=="
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1564894,\n    \"bucket\": \"stompy-dev1-bucket1\",\n    \"arn\": \"arn:aws:iam::385105545457:role/stompy-iam-role-stack-22315084633-StompyFinOpsRole-D7IZKZZ41JO5\",\n    \"aws_status\": false,\n    \"organization\": 152\n}"
						}
					]
				},
				{
					"name": "Save New ECS Account Correct",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"HTTP status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"AWS Status is True\", function () {",
									"    pm.expect(pm.response.json()['arn_status']['analyzer']) .to.be.false;",
									"     pm.expect(pm.response.json()['arn_status']['spotainer']) .to.be.true;",
									"});",
									"pm.test(\"Has keys id, old_id, bucket, analyzer_arn, spotainer_arn, aws_status, organization\", ()=>{",
									"    pm.expect(pm.response.json()).to.have.all.keys('id', 'old_id', 'bucket', 'analyzer_arn', 'spotainer_arn','arn_status', 'organization');",
									"    pm.expect(pm.response.json().bucket).to.eql( pm.environment.get('bucketName'));",
									"    pm.expect(pm.response.json().analyzer_arn).to.eql(null);",
									"    pm.expect(pm.response.json().spotainer_arn).to.eql(pm.environment.get('spotARN'));",
									"    pm.expect(isNaN(pm.response.json().id)) .to.be.false;",
									"});",
									"",
									"pm.environment.set('test_caid', pm.response.json().id)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{test_access}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"organization\": \"{{test_org_id}}\",\n    \"bucket\": \"{{bucketName}}\",\n    \"spotainer_arn\": \"{{spotARN}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host_user}}/cloud-accounts/",
							"host": [
								"{{host_user}}"
							],
							"path": [
								"cloud-accounts",
								""
							]
						}
					},
					"response": [
						{
							"name": "Save New ECS Account",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"1564894\",\n    \"organization\": \"152\",\n    \"bucket\": \"{{bucketName}}\",\n    \"arn\": \"{{testARN}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host_user}}/cloud-accounts/",
									"host": [
										"{{host_user}}"
									],
									"path": [
										"cloud-accounts",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "173"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Date",
									"value": "Thu, 01 Jul 2021 07:54:01 GMT"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "81fa75fc-b7b4-43a1-a13b-9ce528d4ba5b"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "x-amzn-Remapped-Content-Length",
									"value": "186"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "Bx8nlHJ1SQ0FfCg="
								},
								{
									"key": "Vary",
									"value": "Accept, Origin"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-60dd7496-1a9d36181e8dd63378e023f7;Sampled=1"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "Via",
									"value": "1.1 6ff363ba56d3f8161f6692bcccc7a36d.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "LAX50-C3"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "6bdYkBKaCRvPem0kYLfR4IDQp-hTrz7GDxPa7poxEKxWYWbxuV3wSA=="
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1564894,\n    \"bucket\": \"stompy-dev1-bucket1\",\n    \"arn\": \"arn:aws:iam::385105545457:role/stompy-iam-role-stack-22315084633-StompyFinOpsRole-D7IZKZZ41JO5\",\n    \"aws_status\": false,\n    \"organization\": 152\n}"
						}
					]
				},
				{
					"name": "Check Success AWS Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"HTTP status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"AWS Status is True\", function () {",
									"    pm.expect(pm.response.json()['arn_status']['analyzer']) .to.be.false;",
									"     pm.expect(pm.response.json()['arn_status']['spotainer']) .to.be.true;",
									"});",
									"pm.test(\"Has keys id, old_id, bucket, analyzer_arn, spotainer_arn, aws_status, organization\", ()=>{",
									"    pm.expect(pm.response.json()).to.have.all.keys('id', 'old_id', 'bucket', 'analyzer_arn', 'spotainer_arn','arn_status', 'organization');",
									"    pm.expect(pm.response.json().bucket).to.eql( pm.environment.get('bucketName'));",
									"    pm.expect(pm.response.json().analyzer_arn).to.eql(null);",
									"    pm.expect(pm.response.json().spotainer_arn).to.eql(pm.environment.get('spotARN'));",
									"    pm.expect(pm.response.json().id) .to.eql(pm.environment.get('test_caid'));",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{test_access}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host_user}}/cloud-accounts/{{test_caid}}/",
							"host": [
								"{{host_user}}"
							],
							"path": [
								"cloud-accounts",
								"{{test_caid}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "Check Success AWS Status",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{test_access}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host_user}}/cloud-accounts/{{test_caid}}/",
									"host": [
										"{{host_user}}"
									],
									"path": [
										"cloud-accounts",
										"{{test_caid}}",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "174"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Date",
									"value": "Wed, 07 Jul 2021 05:06:31 GMT"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "65b26d2e-ecd8-4b9a-bb7c-13dc1dea1e6f"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Allow",
									"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
								},
								{
									"key": "x-amzn-Remapped-Content-Length",
									"value": "187"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "CFVtYHSDSQ0FpOg="
								},
								{
									"key": "Vary",
									"value": "Accept, Origin"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-60e53655-52090be114d1e1fa696fbe6b;Sampled=1"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "Via",
									"value": "1.1 ba055a10d278614dad75399031edff3c.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "MRS52-C2"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "593UX8u24QnxQIKSBbu4m5GZNrYswhyFm2QT3zmN98GLskDA61Db5w=="
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 17,\n    \"old_id\": null,\n    \"bucket\": \"stompycursingapore\",\n    \"arn\": \"arn:aws:iam::385105545457:role/stompy-iam-role-stack-noelDev-StompyFinOpsRole-BECYKKB5NVPO\",\n    \"aws_status\": true,\n    \"organization\": 6\n}"
						}
					]
				},
				{
					"name": "AWS Accounts fail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {",
									"    pm.expect(pm.response.code).to.equal(500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{test_access}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host_aws}}/organizations/list-accounts/?caid={{test_caid}}",
							"host": [
								"{{host_aws}}"
							],
							"path": [
								"organizations",
								"list-accounts",
								""
							],
							"query": [
								{
									"key": "caid",
									"value": "{{test_caid}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "AWS Accounts fail",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{test_access}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_aws}}/organizations/list-accounts/?caid={{test_caid}}",
									"host": [
										"{{host_aws}}"
									],
									"path": [
										"organizations",
										"list-accounts",
										""
									],
									"query": [
										{
											"key": "caid",
											"value": "{{test_caid}}"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/html"
								},
								{
									"key": "Content-Length",
									"value": "15839"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Date",
									"value": "Fri, 30 Jul 2021 07:38:09 GMT"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "b04f9235-5b9a-42be-8f93-abab49325ea3"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "x-amzn-Remapped-Content-Length",
									"value": "121232"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "DRfeIGXByQ0FeqQ="
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-6103ac5a-0f69a17074dcc3580bbf5987;Sampled=1"
								},
								{
									"key": "X-Cache",
									"value": "Error from cloudfront"
								},
								{
									"key": "Via",
									"value": "1.1 abadcc740cb3a709cff4a366c9ac489b.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "CGK52-C1"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "T4H3Vuw3cQ9VuOpPfwkI8qSy0OLxpRCFNtblkR_hSun30dDvg4Lwpg=="
								}
							],
							"cookie": [],
							"body": "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n        <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n        <title>AccessDeniedException\n          at /organizations/list-accounts/</title>\n        <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n    .fname { user-select: all; }\n  </style>\n        <script>\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = 'none';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll('table.vars'));\n      hideAll(document.querySelectorAll('ol.pre-context'));\n      hideAll(document.querySelectorAll('ol.post-context'));\n      hideAll(document.querySelectorAll('div.pastebin'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == 'none' ? 'block': 'none';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle('v' + id);\n      var s = link.getElementsByTagName('span')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle('browserTraceback', 'pastebinTraceback');\n      return false;\n    }\n  \n        </script>\n    </head>\n    <body>\n        <div id=\"summary\">\n            <h1>AccessDeniedException\n       at /organizations/list-accounts/</h1>\n            <pre class=\"exception_value\">An error occurred (AccessDeniedException) when calling the ListAccounts operation: You don&#x27;t have permissions to access this resource.</pre>\n            <table class=\"meta\">\n                <tr>\n                    <th>Request Method:</th>\n                    <td>GET</td>\n                </tr>\n                <tr>\n                    <th>Request URL:</th>\n                    <td>https://dev.aws.api.stompy.io/organizations/list-accounts/?caid=37</td>\n                </tr>\n                <tr>\n                    <th>Django Version:</th>\n                    <td>3.2</td>\n                </tr>\n                <tr>\n                    <th>Exception Type:</th>\n                    <td>AccessDeniedException</td>\n                </tr>\n                <tr>\n                    <th>Exception Value:</th>\n                    <td>\n                        <pre>An error occurred (AccessDeniedException) when calling the ListAccounts operation: You don&#x27;t have permissions to access this resource.</pre>\n                    </td>\n                </tr>\n                <tr>\n                    <th>Exception Location:</th>\n                    <td>\n                        <span class=\"fname\">/var/runtime/botocore/client.py</span>, line 676, in _make_api_call\n                    </td>\n                </tr>\n                <tr>\n                    <th>Python Executable:</th>\n                    <td>/var/lang/bin/python3.6</td>\n                </tr>\n                <tr>\n                    <th>Python Version:</th>\n                    <td>3.6.13</td>\n                </tr>\n                <tr>\n                    <th>Python Path:</th>\n                    <td>\n                        <pre>[&#x27;/var/task&#x27;,\n &#x27;/opt/python/lib/python3.6/site-packages&#x27;,\n &#x27;/opt/python&#x27;,\n &#x27;/var/runtime&#x27;,\n &#x27;/var/runtime/awslambda&#x27;,\n &#x27;/var/lang/lib/python36.zip&#x27;,\n &#x27;/var/lang/lib/python3.6&#x27;,\n &#x27;/var/lang/lib/python3.6/lib-dynload&#x27;,\n &#x27;/var/lang/lib/python3.6/site-packages&#x27;,\n &#x27;/opt/python/lib/python3.6/site-packages&#x27;,\n &#x27;/opt/python&#x27;,\n &#x27;/var/task&#x27;]</pre>\n                    </td>\n                </tr>\n                <tr>\n                    <th>Server time:</th>\n                    <td>Fri, 30 Jul 2021 15:38:09 +0800</td>\n                </tr>\n            </table>\n        </div>\n        <div id=\"traceback\">\n            <h2>Traceback \n                <span class=\"commands\">\n                    <a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a>\n                </span>\n            </h2>\n            <div id=\"browserTraceback\">\n                <ul class=\"traceback\">\n                    <li class=\"frame django\">\n                        <code class=\"fname\">/var/task/django/core/handlers/exception.py</code>, line 47, in inner\n                        <div class=\"context\" id=\"c140177952862280\">\n                            <ol start=\"40\" class=\"pre-context\" id=\"pre140177952862280\">\n                                <li onclick=\"toggle('pre140177952862280', 'post140177952862280')\">\n                                    <pre>                response = await sync_to_async(response_for_exception, thread_sensitive=False)(request, exc)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952862280', 'post140177952862280')\">\n                                    <pre>            return response</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952862280', 'post140177952862280')\">\n                                    <pre>        return inner</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952862280', 'post140177952862280')\">\n                                    <pre>    else:</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952862280', 'post140177952862280')\">\n                                    <pre>        @wraps(get_response)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952862280', 'post140177952862280')\">\n                                    <pre>        def inner(request):</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952862280', 'post140177952862280')\">\n                                    <pre>            try:</pre>\n                                </li>\n                            </ol>\n                            <ol start=\"47\" class=\"context-line\">\n                                <li onclick=\"toggle('pre140177952862280', 'post140177952862280')\">\n                                    <pre>                response = get_response(request)</pre>\n                                    <span>…</span>\n                                </li>\n                            </ol>\n                            <ol start='48' class=\"post-context\" id=\"post140177952862280\">\n                                <li onclick=\"toggle('pre140177952862280', 'post140177952862280')\">\n                                    <pre>            except Exception as exc:</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952862280', 'post140177952862280')\">\n                                    <pre>                response = response_for_exception(request, exc)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952862280', 'post140177952862280')\">\n                                    <pre>            return response</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952862280', 'post140177952862280')\">\n                                    <pre>        return inner</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952862280', 'post140177952862280')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952862280', 'post140177952862280')\">\n                                    <pre></pre>\n                                </li>\n                            </ol>\n                        </div>\n                        <div class=\"commands\">\n                            <a href=\"#\" onclick=\"return varToggle(this, '140177952862280')\">\n                                <span>&#x25b6;</span> Local vars\n                            </a>\n                        </div>\n                        <table class=\"vars\" id=\"v140177952862280\">\n                            <thead>\n                                <tr>\n                                    <th>Variable</th>\n                                    <th>Value</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>exc</td>\n                                    <td class=\"code\">\n                                        <pre>AccessDeniedException(&quot;An error occurred (AccessDeniedException) when calling the ListAccounts operation: You don&#x27;t have permissions to access this resource.&quot;,)</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>get_response</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x7f7dd1f936d8&gt;&gt;</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>request</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;WSGIRequest: GET &#x27;/organizations/list-accounts/?caid=37&#x27;&gt;</pre>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </li>\n                    <li class=\"frame django\">\n                        <code class=\"fname\">/var/task/django/core/handlers/base.py</code>, line 181, in _get_response\n                        <div class=\"context\" id=\"c140177952865544\">\n                            <ol start=\"174\" class=\"pre-context\" id=\"pre140177952865544\">\n                                <li onclick=\"toggle('pre140177952865544', 'post140177952865544')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952865544', 'post140177952865544')\">\n                                    <pre>        if response is None:</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952865544', 'post140177952865544')\">\n                                    <pre>            wrapped_callback = self.make_view_atomic(callback)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952865544', 'post140177952865544')\">\n                                    <pre>            # If it is an asynchronous view, run it in a subthread.</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952865544', 'post140177952865544')\">\n                                    <pre>            if asyncio.iscoroutinefunction(wrapped_callback):</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952865544', 'post140177952865544')\">\n                                    <pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952865544', 'post140177952865544')\">\n                                    <pre>            try:</pre>\n                                </li>\n                            </ol>\n                            <ol start=\"181\" class=\"context-line\">\n                                <li onclick=\"toggle('pre140177952865544', 'post140177952865544')\">\n                                    <pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre>\n                                    <span>…</span>\n                                </li>\n                            </ol>\n                            <ol start='182' class=\"post-context\" id=\"post140177952865544\">\n                                <li onclick=\"toggle('pre140177952865544', 'post140177952865544')\">\n                                    <pre>            except Exception as e:</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952865544', 'post140177952865544')\">\n                                    <pre>                response = self.process_exception_by_middleware(e, request)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952865544', 'post140177952865544')\">\n                                    <pre>                if response is None:</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952865544', 'post140177952865544')\">\n                                    <pre>                    raise</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952865544', 'post140177952865544')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952865544', 'post140177952865544')\">\n                                    <pre>        # Complain if the view returned None (a common error).</pre>\n                                </li>\n                            </ol>\n                        </div>\n                        <div class=\"commands\">\n                            <a href=\"#\" onclick=\"return varToggle(this, '140177952865544')\">\n                                <span>&#x25b6;</span> Local vars\n                            </a>\n                        </div>\n                        <table class=\"vars\" id=\"v140177952865544\">\n                            <thead>\n                                <tr>\n                                    <th>Variable</th>\n                                    <th>Value</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>callback</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;function AccountsView at 0x7f7dcebea2f0&gt;</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>callback_args</td>\n                                    <td class=\"code\">\n                                        <pre>()</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>callback_kwargs</td>\n                                    <td class=\"code\">\n                                        <pre>{}</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>middleware_method</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;function CsrfViewMiddleware.process_view at 0x7f7dcf161c80&gt;</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>request</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;WSGIRequest: GET &#x27;/organizations/list-accounts/?caid=37&#x27;&gt;</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>response</td>\n                                    <td class=\"code\">\n                                        <pre>None</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>self</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7f7dd1f936d8&gt;</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>wrapped_callback</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;function AccountsView at 0x7f7db3bd80d0&gt;</pre>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </li>\n                    <li class=\"frame user\">\n                        <code class=\"fname\">/var/task/sentry_sdk/integrations/django/views.py</code>, line 67, in sentry_wrapped_callback\n                        <div class=\"context\" id=\"c140177952863944\">\n                            <ol start=\"60\" class=\"pre-context\" id=\"pre140177952863944\">\n                                <li onclick=\"toggle('pre140177952863944', 'post140177952863944')\">\n                                    <pre>    # type: (Hub, Any) -&gt; Any</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952863944', 'post140177952863944')\">\n                                    <pre>    @_functools.wraps(callback)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952863944', 'post140177952863944')\">\n                                    <pre>    def sentry_wrapped_callback(request, *args, **kwargs):</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952863944', 'post140177952863944')\">\n                                    <pre>        # type: (Any, *Any, **Any) -&gt; Any</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952863944', 'post140177952863944')\">\n                                    <pre>        with hub.start_span(</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952863944', 'post140177952863944')\">\n                                    <pre>            op=&quot;django.view&quot;, description=request.resolver_match.view_name</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952863944', 'post140177952863944')\">\n                                    <pre>        ):</pre>\n                                </li>\n                            </ol>\n                            <ol start=\"67\" class=\"context-line\">\n                                <li onclick=\"toggle('pre140177952863944', 'post140177952863944')\">\n                                    <pre>            return callback(request, *args, **kwargs)</pre>\n                                    <span>…</span>\n                                </li>\n                            </ol>\n                            <ol start='68' class=\"post-context\" id=\"post140177952863944\">\n                                <li onclick=\"toggle('pre140177952863944', 'post140177952863944')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952863944', 'post140177952863944')\">\n                                    <pre>    return sentry_wrapped_callback</pre>\n                                </li>\n                            </ol>\n                        </div>\n                        <div class=\"commands\">\n                            <a href=\"#\" onclick=\"return varToggle(this, '140177952863944')\">\n                                <span>&#x25b6;</span> Local vars\n                            </a>\n                        </div>\n                        <table class=\"vars\" id=\"v140177952863944\">\n                            <thead>\n                                <tr>\n                                    <th>Variable</th>\n                                    <th>Value</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>args</td>\n                                    <td class=\"code\">\n                                        <pre>()</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>callback</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;function AccountsView at 0x7f7dcebea2f0&gt;</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>hub</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;sentry_sdk.hub.Hub object at 0x7f7db2d08400&gt;</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>kwargs</td>\n                                    <td class=\"code\">\n                                        <pre>{}</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>request</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;WSGIRequest: GET &#x27;/organizations/list-accounts/?caid=37&#x27;&gt;</pre>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </li>\n                    <li class=\"frame django\">\n                        <code class=\"fname\">/var/task/django/views/decorators/csrf.py</code>, line 54, in wrapped_view\n                        <div class=\"context\" id=\"c140177952844360\">\n                            <ol start=\"47\" class=\"pre-context\" id=\"pre140177952844360\">\n                                <li onclick=\"toggle('pre140177952844360', 'post140177952844360')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844360', 'post140177952844360')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844360', 'post140177952844360')\">\n                                    <pre>def csrf_exempt(view_func):</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844360', 'post140177952844360')\">\n                                    <pre>    &quot;&quot;&quot;Mark a view function as being exempt from the CSRF view protection.&quot;&quot;&quot;</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844360', 'post140177952844360')\">\n                                    <pre>    # view_func.csrf_exempt = True would also work, but decorators are nicer</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844360', 'post140177952844360')\">\n                                    <pre>    # if they don&#x27;t have side effects, so return a new function.</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844360', 'post140177952844360')\">\n                                    <pre>    def wrapped_view(*args, **kwargs):</pre>\n                                </li>\n                            </ol>\n                            <ol start=\"54\" class=\"context-line\">\n                                <li onclick=\"toggle('pre140177952844360', 'post140177952844360')\">\n                                    <pre>        return view_func(*args, **kwargs)</pre>\n                                    <span>…</span>\n                                </li>\n                            </ol>\n                            <ol start='55' class=\"post-context\" id=\"post140177952844360\">\n                                <li onclick=\"toggle('pre140177952844360', 'post140177952844360')\">\n                                    <pre>    wrapped_view.csrf_exempt = True</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844360', 'post140177952844360')\">\n                                    <pre>    return wraps(view_func)(wrapped_view)</pre>\n                                </li>\n                            </ol>\n                        </div>\n                        <div class=\"commands\">\n                            <a href=\"#\" onclick=\"return varToggle(this, '140177952844360')\">\n                                <span>&#x25b6;</span> Local vars\n                            </a>\n                        </div>\n                        <table class=\"vars\" id=\"v140177952844360\">\n                            <thead>\n                                <tr>\n                                    <th>Variable</th>\n                                    <th>Value</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>args</td>\n                                    <td class=\"code\">\n                                        <pre>(&lt;WSGIRequest: GET &#x27;/organizations/list-accounts/?caid=37&#x27;&gt;,)</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>kwargs</td>\n                                    <td class=\"code\">\n                                        <pre>{}</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>view_func</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;function AccountsView at 0x7f7dcecfbc80&gt;</pre>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </li>\n                    <li class=\"frame django\">\n                        <code class=\"fname\">/var/task/django/views/generic/base.py</code>, line 70, in view\n                        <div class=\"context\" id=\"c140177952843144\">\n                            <ol start=\"63\" class=\"pre-context\" id=\"pre140177952843144\">\n                                <li onclick=\"toggle('pre140177952843144', 'post140177952843144')\">\n                                    <pre>            self = cls(**initkwargs)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843144', 'post140177952843144')\">\n                                    <pre>            self.setup(request, *args, **kwargs)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843144', 'post140177952843144')\">\n                                    <pre>            if not hasattr(self, &#x27;request&#x27;):</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843144', 'post140177952843144')\">\n                                    <pre>                raise AttributeError(</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843144', 'post140177952843144')\">\n                                    <pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843144', 'post140177952843144')\">\n                                    <pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843144', 'post140177952843144')\">\n                                    <pre>                )</pre>\n                                </li>\n                            </ol>\n                            <ol start=\"70\" class=\"context-line\">\n                                <li onclick=\"toggle('pre140177952843144', 'post140177952843144')\">\n                                    <pre>            return self.dispatch(request, *args, **kwargs)</pre>\n                                    <span>…</span>\n                                </li>\n                            </ol>\n                            <ol start='71' class=\"post-context\" id=\"post140177952843144\">\n                                <li onclick=\"toggle('pre140177952843144', 'post140177952843144')\">\n                                    <pre>        view.view_class = cls</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843144', 'post140177952843144')\">\n                                    <pre>        view.view_initkwargs = initkwargs</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843144', 'post140177952843144')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843144', 'post140177952843144')\">\n                                    <pre>        # take name and docstring from class</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843144', 'post140177952843144')\">\n                                    <pre>        update_wrapper(view, cls, updated=())</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843144', 'post140177952843144')\">\n                                    <pre></pre>\n                                </li>\n                            </ol>\n                        </div>\n                        <div class=\"commands\">\n                            <a href=\"#\" onclick=\"return varToggle(this, '140177952843144')\">\n                                <span>&#x25b6;</span> Local vars\n                            </a>\n                        </div>\n                        <table class=\"vars\" id=\"v140177952843144\">\n                            <thead>\n                                <tr>\n                                    <th>Variable</th>\n                                    <th>Value</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>args</td>\n                                    <td class=\"code\">\n                                        <pre>()</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>cls</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;class &#x27;core.views.AccountsView&#x27;&gt;</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>initkwargs</td>\n                                    <td class=\"code\">\n                                        <pre>{}</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>kwargs</td>\n                                    <td class=\"code\">\n                                        <pre>{}</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>request</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;WSGIRequest: GET &#x27;/organizations/list-accounts/?caid=37&#x27;&gt;</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>self</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;core.views.AccountsView object at 0x7f7db2d08908&gt;</pre>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </li>\n                    <li class=\"frame user\">\n                        <code class=\"fname\">/var/task/rest_framework/views.py</code>, line 509, in dispatch\n                        <div class=\"context\" id=\"c140177952843720\">\n                            <ol start=\"502\" class=\"pre-context\" id=\"pre140177952843720\">\n                                <li onclick=\"toggle('pre140177952843720', 'post140177952843720')\">\n                                    <pre>                                  self.http_method_not_allowed)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843720', 'post140177952843720')\">\n                                    <pre>            else:</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843720', 'post140177952843720')\">\n                                    <pre>                handler = self.http_method_not_allowed</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843720', 'post140177952843720')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843720', 'post140177952843720')\">\n                                    <pre>            response = handler(request, *args, **kwargs)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843720', 'post140177952843720')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843720', 'post140177952843720')\">\n                                    <pre>        except Exception as exc:</pre>\n                                </li>\n                            </ol>\n                            <ol start=\"509\" class=\"context-line\">\n                                <li onclick=\"toggle('pre140177952843720', 'post140177952843720')\">\n                                    <pre>            response = self.handle_exception(exc)</pre>\n                                    <span>…</span>\n                                </li>\n                            </ol>\n                            <ol start='510' class=\"post-context\" id=\"post140177952843720\">\n                                <li onclick=\"toggle('pre140177952843720', 'post140177952843720')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843720', 'post140177952843720')\">\n                                    <pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843720', 'post140177952843720')\">\n                                    <pre>        return self.response</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843720', 'post140177952843720')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843720', 'post140177952843720')\">\n                                    <pre>    def options(self, request, *args, **kwargs):</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843720', 'post140177952843720')\">\n                                    <pre>        &quot;&quot;&quot;</pre>\n                                </li>\n                            </ol>\n                        </div>\n                        <div class=\"commands\">\n                            <a href=\"#\" onclick=\"return varToggle(this, '140177952843720')\">\n                                <span>&#x25b6;</span> Local vars\n                            </a>\n                        </div>\n                        <table class=\"vars\" id=\"v140177952843720\">\n                            <thead>\n                                <tr>\n                                    <th>Variable</th>\n                                    <th>Value</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>args</td>\n                                    <td class=\"code\">\n                                        <pre>()</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>handler</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;bound method require_parameter.&lt;locals&gt;.inner.&lt;locals&gt;.wrapper of &lt;core.views.AccountsView object at 0x7f7db2d08908&gt;&gt;</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>kwargs</td>\n                                    <td class=\"code\">\n                                        <pre>{}</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>request</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;rest_framework.request.Request: GET &#x27;/organizations/list-accounts/?caid=37&#x27;&gt;</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>self</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;core.views.AccountsView object at 0x7f7db2d08908&gt;</pre>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </li>\n                    <li class=\"frame user\">\n                        <code class=\"fname\">/var/task/rest_framework/views.py</code>, line 469, in handle_exception\n                        <div class=\"context\" id=\"c140177952844168\">\n                            <ol start=\"462\" class=\"pre-context\" id=\"pre140177952844168\">\n                                <li onclick=\"toggle('pre140177952844168', 'post140177952844168')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844168', 'post140177952844168')\">\n                                    <pre>        exception_handler = self.get_exception_handler()</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844168', 'post140177952844168')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844168', 'post140177952844168')\">\n                                    <pre>        context = self.get_exception_handler_context()</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844168', 'post140177952844168')\">\n                                    <pre>        response = exception_handler(exc, context)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844168', 'post140177952844168')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844168', 'post140177952844168')\">\n                                    <pre>        if response is None:</pre>\n                                </li>\n                            </ol>\n                            <ol start=\"469\" class=\"context-line\">\n                                <li onclick=\"toggle('pre140177952844168', 'post140177952844168')\">\n                                    <pre>            self.raise_uncaught_exception(exc)</pre>\n                                    <span>…</span>\n                                </li>\n                            </ol>\n                            <ol start='470' class=\"post-context\" id=\"post140177952844168\">\n                                <li onclick=\"toggle('pre140177952844168', 'post140177952844168')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844168', 'post140177952844168')\">\n                                    <pre>        response.exception = True</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844168', 'post140177952844168')\">\n                                    <pre>        return response</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844168', 'post140177952844168')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844168', 'post140177952844168')\">\n                                    <pre>    def raise_uncaught_exception(self, exc):</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844168', 'post140177952844168')\">\n                                    <pre>        if settings.DEBUG:</pre>\n                                </li>\n                            </ol>\n                        </div>\n                        <div class=\"commands\">\n                            <a href=\"#\" onclick=\"return varToggle(this, '140177952844168')\">\n                                <span>&#x25b6;</span> Local vars\n                            </a>\n                        </div>\n                        <table class=\"vars\" id=\"v140177952844168\">\n                            <thead>\n                                <tr>\n                                    <th>Variable</th>\n                                    <th>Value</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>context</td>\n                                    <td class=\"code\">\n                                        <pre>{&#x27;args&#x27;: (),\n &#x27;kwargs&#x27;: {},\n &#x27;request&#x27;: &lt;rest_framework.request.Request: GET &#x27;/organizations/list-accounts/?caid=37&#x27;&gt;,\n &#x27;view&#x27;: &lt;core.views.AccountsView object at 0x7f7db2d08908&gt;}</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>exc</td>\n                                    <td class=\"code\">\n                                        <pre>AccessDeniedException(&quot;An error occurred (AccessDeniedException) when calling the ListAccounts operation: You don&#x27;t have permissions to access this resource.&quot;,)</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>exception_handler</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;function exception_handler at 0x7f7dcecd9158&gt;</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>response</td>\n                                    <td class=\"code\">\n                                        <pre>None</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>self</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;core.views.AccountsView object at 0x7f7db2d08908&gt;</pre>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </li>\n                    <li class=\"frame user\">\n                        <code class=\"fname\">/var/task/rest_framework/views.py</code>, line 480, in raise_uncaught_exception\n                        <div class=\"context\" id=\"c140177952843336\">\n                            <ol start=\"473\" class=\"pre-context\" id=\"pre140177952843336\">\n                                <li onclick=\"toggle('pre140177952843336', 'post140177952843336')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843336', 'post140177952843336')\">\n                                    <pre>    def raise_uncaught_exception(self, exc):</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843336', 'post140177952843336')\">\n                                    <pre>        if settings.DEBUG:</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843336', 'post140177952843336')\">\n                                    <pre>            request = self.request</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843336', 'post140177952843336')\">\n                                    <pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843336', 'post140177952843336')\">\n                                    <pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843336', 'post140177952843336')\">\n                                    <pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre>\n                                </li>\n                            </ol>\n                            <ol start=\"480\" class=\"context-line\">\n                                <li onclick=\"toggle('pre140177952843336', 'post140177952843336')\">\n                                    <pre>        raise exc</pre>\n                                    <span>…</span>\n                                </li>\n                            </ol>\n                            <ol start='481' class=\"post-context\" id=\"post140177952843336\">\n                                <li onclick=\"toggle('pre140177952843336', 'post140177952843336')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843336', 'post140177952843336')\">\n                                    <pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843336', 'post140177952843336')\">\n                                    <pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843336', 'post140177952843336')\">\n                                    <pre>    # be overridden.</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843336', 'post140177952843336')\">\n                                    <pre>    def dispatch(self, request, *args, **kwargs):</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843336', 'post140177952843336')\">\n                                    <pre>        &quot;&quot;&quot;</pre>\n                                </li>\n                            </ol>\n                        </div>\n                        <div class=\"commands\">\n                            <a href=\"#\" onclick=\"return varToggle(this, '140177952843336')\">\n                                <span>&#x25b6;</span> Local vars\n                            </a>\n                        </div>\n                        <table class=\"vars\" id=\"v140177952843336\">\n                            <thead>\n                                <tr>\n                                    <th>Variable</th>\n                                    <th>Value</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>exc</td>\n                                    <td class=\"code\">\n                                        <pre>AccessDeniedException(&quot;An error occurred (AccessDeniedException) when calling the ListAccounts operation: You don&#x27;t have permissions to access this resource.&quot;,)</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>renderer_format</td>\n                                    <td class=\"code\">\n                                        <pre>&#x27;json&#x27;</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>request</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;rest_framework.request.Request: GET &#x27;/organizations/list-accounts/?caid=37&#x27;&gt;</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>self</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;core.views.AccountsView object at 0x7f7db2d08908&gt;</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>use_plaintext_traceback</td>\n                                    <td class=\"code\">\n                                        <pre>True</pre>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </li>\n                    <li class=\"frame user\">\n                        <code class=\"fname\">/var/task/rest_framework/views.py</code>, line 506, in dispatch\n                        <div class=\"context\" id=\"c140177952842248\">\n                            <ol start=\"499\" class=\"pre-context\" id=\"pre140177952842248\">\n                                <li onclick=\"toggle('pre140177952842248', 'post140177952842248')\">\n                                    <pre>            # Get the appropriate handler method</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952842248', 'post140177952842248')\">\n                                    <pre>            if request.method.lower() in self.http_method_names:</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952842248', 'post140177952842248')\">\n                                    <pre>                handler = getattr(self, request.method.lower(),</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952842248', 'post140177952842248')\">\n                                    <pre>                                  self.http_method_not_allowed)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952842248', 'post140177952842248')\">\n                                    <pre>            else:</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952842248', 'post140177952842248')\">\n                                    <pre>                handler = self.http_method_not_allowed</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952842248', 'post140177952842248')\">\n                                    <pre></pre>\n                                </li>\n                            </ol>\n                            <ol start=\"506\" class=\"context-line\">\n                                <li onclick=\"toggle('pre140177952842248', 'post140177952842248')\">\n                                    <pre>            response = handler(request, *args, **kwargs)</pre>\n                                    <span>…</span>\n                                </li>\n                            </ol>\n                            <ol start='507' class=\"post-context\" id=\"post140177952842248\">\n                                <li onclick=\"toggle('pre140177952842248', 'post140177952842248')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952842248', 'post140177952842248')\">\n                                    <pre>        except Exception as exc:</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952842248', 'post140177952842248')\">\n                                    <pre>            response = self.handle_exception(exc)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952842248', 'post140177952842248')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952842248', 'post140177952842248')\">\n                                    <pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952842248', 'post140177952842248')\">\n                                    <pre>        return self.response</pre>\n                                </li>\n                            </ol>\n                        </div>\n                        <div class=\"commands\">\n                            <a href=\"#\" onclick=\"return varToggle(this, '140177952842248')\">\n                                <span>&#x25b6;</span> Local vars\n                            </a>\n                        </div>\n                        <table class=\"vars\" id=\"v140177952842248\">\n                            <thead>\n                                <tr>\n                                    <th>Variable</th>\n                                    <th>Value</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>args</td>\n                                    <td class=\"code\">\n                                        <pre>()</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>handler</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;bound method require_parameter.&lt;locals&gt;.inner.&lt;locals&gt;.wrapper of &lt;core.views.AccountsView object at 0x7f7db2d08908&gt;&gt;</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>kwargs</td>\n                                    <td class=\"code\">\n                                        <pre>{}</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>request</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;rest_framework.request.Request: GET &#x27;/organizations/list-accounts/?caid=37&#x27;&gt;</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>self</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;core.views.AccountsView object at 0x7f7db2d08908&gt;</pre>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </li>\n                    <li class=\"frame user\">\n                        <code class=\"fname\">/var/task/core/decorators.py</code>, line 30, in wrapper\n                        <div class=\"context\" id=\"c140177952844424\">\n                            <ol start=\"23\" class=\"pre-context\" id=\"pre140177952844424\">\n                                <li onclick=\"toggle('pre140177952844424', 'post140177952844424')\">\n                                    <pre>            not_in_get = request.method == &#x27;GET&#x27; and not (name in request.GET and request.GET.get(name).strip())  # NOQA E501</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844424', 'post140177952844424')\">\n                                    <pre>            not_in_post = request.method != &#x27;GET&#x27; and not (name in getattr(request, &#x27;data&#x27;) and request.data.get(name))  # NOQA E501</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844424', 'post140177952844424')\">\n                                    <pre>            if not_in_get or not_in_post:</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844424', 'post140177952844424')\">\n                                    <pre>                return Response(</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844424', 'post140177952844424')\">\n                                    <pre>                    {&#x27;error&#x27;: f&#x27;Required parameter &lt;{name}&gt; is Missing or Empty.&#x27;},</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844424', 'post140177952844424')\">\n                                    <pre>                    status=status.HTTP_400_BAD_REQUEST</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844424', 'post140177952844424')\">\n                                    <pre>                )</pre>\n                                </li>\n                            </ol>\n                            <ol start=\"30\" class=\"context-line\">\n                                <li onclick=\"toggle('pre140177952844424', 'post140177952844424')\">\n                                    <pre>            return func(*args, **kwargs)</pre>\n                                    <span>…</span>\n                                </li>\n                            </ol>\n                            <ol start='31' class=\"post-context\" id=\"post140177952844424\">\n                                <li onclick=\"toggle('pre140177952844424', 'post140177952844424')\">\n                                    <pre>        return wrapper</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844424', 'post140177952844424')\">\n                                    <pre>    return inner</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844424', 'post140177952844424')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844424', 'post140177952844424')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844424', 'post140177952844424')\">\n                                    <pre>def deprecated_url_warning(new_url, deprecated_url):</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844424', 'post140177952844424')\">\n                                    <pre>    def inner(func):</pre>\n                                </li>\n                            </ol>\n                        </div>\n                        <div class=\"commands\">\n                            <a href=\"#\" onclick=\"return varToggle(this, '140177952844424')\">\n                                <span>&#x25b6;</span> Local vars\n                            </a>\n                        </div>\n                        <table class=\"vars\" id=\"v140177952844424\">\n                            <thead>\n                                <tr>\n                                    <th>Variable</th>\n                                    <th>Value</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>args</td>\n                                    <td class=\"code\">\n                                        <pre>(&lt;core.views.AccountsView object at 0x7f7db2d08908&gt;,\n &lt;rest_framework.request.Request: GET &#x27;/organizations/list-accounts/?caid=37&#x27;&gt;)</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>func</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;function AccountsView.get at 0x7f7db9f18b70&gt;</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>kwargs</td>\n                                    <td class=\"code\">\n                                        <pre>{}</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>name</td>\n                                    <td class=\"code\">\n                                        <pre>&#x27;caid&#x27;</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>not_in_get</td>\n                                    <td class=\"code\">\n                                        <pre>False</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>not_in_post</td>\n                                    <td class=\"code\">\n                                        <pre>False</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>request</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;rest_framework.request.Request: GET &#x27;/organizations/list-accounts/?caid=37&#x27;&gt;</pre>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </li>\n                    <li class=\"frame user\">\n                        <code class=\"fname\">/var/task/core/views.py</code>, line 171, in get\n                        <div class=\"context\" id=\"c140177952844296\">\n                            <ol start=\"164\" class=\"pre-context\" id=\"pre140177952844296\">\n                                <li onclick=\"toggle('pre140177952844296', 'post140177952844296')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844296', 'post140177952844296')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844296', 'post140177952844296')\">\n                                    <pre>class AccountsView(APIView):</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844296', 'post140177952844296')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844296', 'post140177952844296')\">\n                                    <pre>    @decorators.require_parameter(&#x27;caid&#x27;)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844296', 'post140177952844296')\">\n                                    <pre>    def get(self, request):</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844296', 'post140177952844296')\">\n                                    <pre>        client = organizations.Account(request.GET.get(&#x27;caid&#x27;))</pre>\n                                </li>\n                            </ol>\n                            <ol start=\"171\" class=\"context-line\">\n                                <li onclick=\"toggle('pre140177952844296', 'post140177952844296')\">\n                                    <pre>        result = client.list_accounts()</pre>\n                                    <span>…</span>\n                                </li>\n                            </ol>\n                            <ol start='172' class=\"post-context\" id=\"post140177952844296\">\n                                <li onclick=\"toggle('pre140177952844296', 'post140177952844296')\">\n                                    <pre>        return Response({&#x27;results&#x27;: result})</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844296', 'post140177952844296')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844296', 'post140177952844296')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844296', 'post140177952844296')\">\n                                    <pre>class TrendDiagramView(APIView):</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844296', 'post140177952844296')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952844296', 'post140177952844296')\">\n                                    <pre>    @decorators.require_parameter(&#x27;caid&#x27;)</pre>\n                                </li>\n                            </ol>\n                        </div>\n                        <div class=\"commands\">\n                            <a href=\"#\" onclick=\"return varToggle(this, '140177952844296')\">\n                                <span>&#x25b6;</span> Local vars\n                            </a>\n                        </div>\n                        <table class=\"vars\" id=\"v140177952844296\">\n                            <thead>\n                                <tr>\n                                    <th>Variable</th>\n                                    <th>Value</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>client</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;core.clients.organizations.Account object at 0x7f7db2d08438&gt;</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>request</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;rest_framework.request.Request: GET &#x27;/organizations/list-accounts/?caid=37&#x27;&gt;</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>self</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;core.views.AccountsView object at 0x7f7db2d08908&gt;</pre>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </li>\n                    <li class=\"frame user\">\n                        <code class=\"fname\">/var/task/core/decorators.py</code>, line 14, in wrapper\n                        <div class=\"context\" id=\"c140177952843784\">\n                            <ol start=\"7\" class=\"pre-context\" id=\"pre140177952843784\">\n                                <li onclick=\"toggle('pre140177952843784', 'post140177952843784')\">\n                                    <pre>def handle_missing_credentials(client_name):</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843784', 'post140177952843784')\">\n                                    <pre>    def inner(func):</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843784', 'post140177952843784')\">\n                                    <pre>        def wrapper(*args, **kwargs):</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843784', 'post140177952843784')\">\n                                    <pre>            try:</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843784', 'post140177952843784')\">\n                                    <pre>                kwargs[f&#x27;{client_name}_client&#x27;] = args[0].get_client(client_name)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843784', 'post140177952843784')\">\n                                    <pre>            except MissingCredentialsException as err:</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843784', 'post140177952843784')\">\n                                    <pre>                return {&#x27;error&#x27;: str(err)}</pre>\n                                </li>\n                            </ol>\n                            <ol start=\"14\" class=\"context-line\">\n                                <li onclick=\"toggle('pre140177952843784', 'post140177952843784')\">\n                                    <pre>            return func(*args, **kwargs)</pre>\n                                    <span>…</span>\n                                </li>\n                            </ol>\n                            <ol start='15' class=\"post-context\" id=\"post140177952843784\">\n                                <li onclick=\"toggle('pre140177952843784', 'post140177952843784')\">\n                                    <pre>        return wrapper</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843784', 'post140177952843784')\">\n                                    <pre>    return inner</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843784', 'post140177952843784')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843784', 'post140177952843784')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843784', 'post140177952843784')\">\n                                    <pre>def require_parameter(name):</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177952843784', 'post140177952843784')\">\n                                    <pre>    def inner(func):</pre>\n                                </li>\n                            </ol>\n                        </div>\n                        <div class=\"commands\">\n                            <a href=\"#\" onclick=\"return varToggle(this, '140177952843784')\">\n                                <span>&#x25b6;</span> Local vars\n                            </a>\n                        </div>\n                        <table class=\"vars\" id=\"v140177952843784\">\n                            <thead>\n                                <tr>\n                                    <th>Variable</th>\n                                    <th>Value</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>args</td>\n                                    <td class=\"code\">\n                                        <pre>(&lt;core.clients.organizations.Account object at 0x7f7db2d08438&gt;,)</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>client_name</td>\n                                    <td class=\"code\">\n                                        <pre>&#x27;organizations&#x27;</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>func</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;function Account.list_accounts at 0x7f7dbc2d99d8&gt;</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>kwargs</td>\n                                    <td class=\"code\">\n                                        <pre>{&#x27;organizations_client&#x27;: &lt;botocore.client.Organizations object at 0x7f7db8e7e470&gt;}</pre>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </li>\n                    <li class=\"frame user\">\n                        <code class=\"fname\">/var/task/core/clients/organizations.py</code>, line 18, in list_accounts\n                        <div class=\"context\" id=\"c140177954060232\">\n                            <ol start=\"11\" class=\"pre-context\" id=\"pre140177954060232\">\n                                <li onclick=\"toggle('pre140177954060232', 'post140177954060232')\">\n                                    <pre>    def list_accounts(self, organizations_client=None):</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177954060232', 'post140177954060232')\">\n                                    <pre>        pattern = re.compile(r&#x27;^arn:aws:organizations::([\\d]{12}):account/o-[a-z0-9]{10,32}/([\\d]{12})$&#x27;)  # noqa E501</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177954060232', 'post140177954060232')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177954060232', 'post140177954060232')\">\n                                    <pre>        def is_root_account(arn):</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177954060232', 'post140177954060232')\">\n                                    <pre>            groups = re.match(pattern, arn).groups()</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177954060232', 'post140177954060232')\">\n                                    <pre>            return groups[0] == groups[1]</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177954060232', 'post140177954060232')\">\n                                    <pre></pre>\n                                </li>\n                            </ol>\n                            <ol start=\"18\" class=\"context-line\">\n                                <li onclick=\"toggle('pre140177954060232', 'post140177954060232')\">\n                                    <pre>        response = organizations_client.list_accounts()</pre>\n                                    <span>…</span>\n                                </li>\n                            </ol>\n                            <ol start='19' class=\"post-context\" id=\"post140177954060232\">\n                                <li onclick=\"toggle('pre140177954060232', 'post140177954060232')\">\n                                    <pre>        df = pd.DataFrame(response[&#x27;Accounts&#x27;])</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177954060232', 'post140177954060232')\">\n                                    <pre>        df[&#x27;isRoot&#x27;] = df[&#x27;Arn&#x27;].apply(is_root_account)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177954060232', 'post140177954060232')\">\n                                    <pre>        return df[[&#x27;Id&#x27;, &#x27;Name&#x27;, &#x27;isRoot&#x27;]].to_dict(&#x27;records&#x27;)</pre>\n                                </li>\n                            </ol>\n                        </div>\n                        <div class=\"commands\">\n                            <a href=\"#\" onclick=\"return varToggle(this, '140177954060232')\">\n                                <span>&#x25b6;</span> Local vars\n                            </a>\n                        </div>\n                        <table class=\"vars\" id=\"v140177954060232\">\n                            <thead>\n                                <tr>\n                                    <th>Variable</th>\n                                    <th>Value</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>is_root_account</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;function Account.list_accounts.&lt;locals&gt;.is_root_account at 0x7f7db8e426a8&gt;</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>organizations_client</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;botocore.client.Organizations object at 0x7f7db8e7e470&gt;</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>pattern</td>\n                                    <td class=\"code\">\n                                        <pre>re.compile(&#x27;^arn:aws:organizations::([\\\\d]{12}):account/o-[a-z0-9]{10,32}/([\\\\d]{12})$&#x27;)</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>self</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;core.clients.organizations.Account object at 0x7f7db2d08438&gt;</pre>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </li>\n                    <li class=\"frame user\">\n                        <code class=\"fname\">/var/runtime/botocore/client.py</code>, line 357, in _api_call\n                        <div class=\"context\" id=\"c140177954060488\">\n                            <ol start=\"350\" class=\"pre-context\" id=\"pre140177954060488\">\n                                <li onclick=\"toggle('pre140177954060488', 'post140177954060488')\">\n                                    <pre>            # We&#x27;re accepting *args so that we can give a more helpful</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177954060488', 'post140177954060488')\">\n                                    <pre>            # error message than TypeError: _api_call takes exactly</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177954060488', 'post140177954060488')\">\n                                    <pre>            # 1 argument.</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177954060488', 'post140177954060488')\">\n                                    <pre>            if args:</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177954060488', 'post140177954060488')\">\n                                    <pre>                raise TypeError(</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177954060488', 'post140177954060488')\">\n                                    <pre>                    &quot;%s() only accepts keyword arguments.&quot; % py_operation_name)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177954060488', 'post140177954060488')\">\n                                    <pre>            # The &quot;self&quot; in this scope is referring to the BaseClient.</pre>\n                                </li>\n                            </ol>\n                            <ol start=\"357\" class=\"context-line\">\n                                <li onclick=\"toggle('pre140177954060488', 'post140177954060488')\">\n                                    <pre>            return self._make_api_call(operation_name, kwargs)</pre>\n                                    <span>…</span>\n                                </li>\n                            </ol>\n                            <ol start='358' class=\"post-context\" id=\"post140177954060488\">\n                                <li onclick=\"toggle('pre140177954060488', 'post140177954060488')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177954060488', 'post140177954060488')\">\n                                    <pre>        _api_call.__name__ = str(py_operation_name)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177954060488', 'post140177954060488')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177954060488', 'post140177954060488')\">\n                                    <pre>        # Add the docstring to the client method</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177954060488', 'post140177954060488')\">\n                                    <pre>        operation_model = service_model.operation_model(operation_name)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177954060488', 'post140177954060488')\">\n                                    <pre>        docstring = ClientMethodDocstring(</pre>\n                                </li>\n                            </ol>\n                        </div>\n                        <div class=\"commands\">\n                            <a href=\"#\" onclick=\"return varToggle(this, '140177954060488')\">\n                                <span>&#x25b6;</span> Local vars\n                            </a>\n                        </div>\n                        <table class=\"vars\" id=\"v140177954060488\">\n                            <thead>\n                                <tr>\n                                    <th>Variable</th>\n                                    <th>Value</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>args</td>\n                                    <td class=\"code\">\n                                        <pre>()</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>kwargs</td>\n                                    <td class=\"code\">\n                                        <pre>{}</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>operation_name</td>\n                                    <td class=\"code\">\n                                        <pre>&#x27;ListAccounts&#x27;</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>py_operation_name</td>\n                                    <td class=\"code\">\n                                        <pre>&#x27;list_accounts&#x27;</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>self</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;botocore.client.Organizations object at 0x7f7db8e7e470&gt;</pre>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </li>\n                    <li class=\"frame user\">\n                        <code class=\"fname\">/var/runtime/botocore/client.py</code>, line 676, in _make_api_call\n                        <div class=\"context\" id=\"c140177945229000\">\n                            <ol start=\"669\" class=\"pre-context\" id=\"pre140177945229000\">\n                                <li onclick=\"toggle('pre140177945229000', 'post140177945229000')\">\n                                    <pre>            http_response=http, parsed=parsed_response,</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177945229000', 'post140177945229000')\">\n                                    <pre>            model=operation_model, context=request_context</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177945229000', 'post140177945229000')\">\n                                    <pre>        )</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177945229000', 'post140177945229000')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177945229000', 'post140177945229000')\">\n                                    <pre>        if http.status_code &gt;= 300:</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177945229000', 'post140177945229000')\">\n                                    <pre>            error_code = parsed_response.get(&quot;Error&quot;, {}).get(&quot;Code&quot;)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177945229000', 'post140177945229000')\">\n                                    <pre>            error_class = self.exceptions.from_code(error_code)</pre>\n                                </li>\n                            </ol>\n                            <ol start=\"676\" class=\"context-line\">\n                                <li onclick=\"toggle('pre140177945229000', 'post140177945229000')\">\n                                    <pre>            raise error_class(parsed_response, operation_name)</pre>\n                                    <span>…</span>\n                                </li>\n                            </ol>\n                            <ol start='677' class=\"post-context\" id=\"post140177945229000\">\n                                <li onclick=\"toggle('pre140177945229000', 'post140177945229000')\">\n                                    <pre>        else:</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177945229000', 'post140177945229000')\">\n                                    <pre>            return parsed_response</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177945229000', 'post140177945229000')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177945229000', 'post140177945229000')\">\n                                    <pre>    def _make_request(self, operation_model, request_dict, request_context):</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177945229000', 'post140177945229000')\">\n                                    <pre>        try:</pre>\n                                </li>\n                                <li onclick=\"toggle('pre140177945229000', 'post140177945229000')\">\n                                    <pre>            return self._endpoint.make_request(operation_model, request_dict)</pre>\n                                </li>\n                            </ol>\n                        </div>\n                        <div class=\"commands\">\n                            <a href=\"#\" onclick=\"return varToggle(this, '140177945229000')\">\n                                <span>&#x25b6;</span> Local vars\n                            </a>\n                        </div>\n                        <table class=\"vars\" id=\"v140177945229000\">\n                            <thead>\n                                <tr>\n                                    <th>Variable</th>\n                                    <th>Value</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>api_params</td>\n                                    <td class=\"code\">\n                                        <pre>{}</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>error_class</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;class &#x27;botocore.errorfactory.AccessDeniedException&#x27;&gt;</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>error_code</td>\n                                    <td class=\"code\">\n                                        <pre>&#x27;AccessDeniedException&#x27;</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>event_response</td>\n                                    <td class=\"code\">\n                                        <pre>None</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>handler</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;function inject_api_version_header_if_needed at 0x7f7dd34b5488&gt;</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>http</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;botocore.awsrequest.AWSResponse object at 0x7f7db8e7e208&gt;</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>operation_model</td>\n                                    <td class=\"code\">\n                                        <pre>OperationModel(name=ListAccounts)</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>operation_name</td>\n                                    <td class=\"code\">\n                                        <pre>&#x27;ListAccounts&#x27;</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>parsed_response</td>\n                                    <td class=\"code\">\n                                        <pre>{&#x27;Error&#x27;: {&#x27;Code&#x27;: &#x27;AccessDeniedException&#x27;,\n           &#x27;Message&#x27;: &quot;You don&#x27;t have permissions to access this resource.&quot;},\n &#x27;Message&#x27;: &quot;You don&#x27;t have permissions to access this resource.&quot;,\n &#x27;ResponseMetadata&#x27;: {&#x27;HTTPHeaders&#x27;: {&#x27;connection&#x27;: &#x27;close&#x27;,\n                                      &#x27;content-length&#x27;: &#x27;98&#x27;,\n                                      &#x27;content-type&#x27;: &#x27;application/x-amz-json-1.1&#x27;,\n                                      &#x27;date&#x27;: &#x27;Fri, 30 Jul 2021 07:38:07 GMT&#x27;,\n                                      &#x27;x-amzn-requestid&#x27;: &#x27;0c6c414c-bc4e-4799-85f6-d7f6fb909017&#x27;},\n                      &#x27;HTTPStatusCode&#x27;: 400,\n                      &#x27;RequestId&#x27;: &#x27;0c6c414c-bc4e-4799-85f6-d7f6fb909017&#x27;,\n                      &#x27;RetryAttempts&#x27;: 0}}</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>request_context</td>\n                                    <td class=\"code\">\n                                        <pre>{&#x27;auth_type&#x27;: None,\n &#x27;client_config&#x27;: &lt;botocore.config.Config object at 0x7f7db8e7e780&gt;,\n &#x27;client_region&#x27;: &#x27;aws-global&#x27;,\n &#x27;has_streaming_input&#x27;: False,\n &#x27;timestamp&#x27;: &#x27;20210730T073807Z&#x27;}</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>request_dict</td>\n                                    <td class=\"code\">\n                                        <pre>{&#x27;body&#x27;: b&#x27;{}&#x27;,\n &#x27;context&#x27;: {&#x27;auth_type&#x27;: None,\n             &#x27;client_config&#x27;: &lt;botocore.config.Config object at 0x7f7db8e7e780&gt;,\n             &#x27;client_region&#x27;: &#x27;aws-global&#x27;,\n             &#x27;has_streaming_input&#x27;: False,\n             &#x27;timestamp&#x27;: &#x27;20210730T073807Z&#x27;},\n &#x27;headers&#x27;: {&#x27;Content-Type&#x27;: &#x27;application/x-amz-json-1.1&#x27;,\n             &#x27;User-Agent&#x27;: &#x27;Boto3/1.17.42 Python/3.6.13 &#x27;\n                           &#x27;Linux/4.14.231-180.360.amzn2.x86_64 &#x27;\n                           &#x27;exec-env/AWS_Lambda_python3.6 Botocore/1.20.42&#x27;,\n             &#x27;X-Amz-Target&#x27;: &#x27;AWSOrganizationsV20161128.ListAccounts&#x27;},\n &#x27;method&#x27;: &#x27;POST&#x27;,\n &#x27;query_string&#x27;: &#x27;&#x27;,\n &#x27;url&#x27;: &#x27;https://organizations.us-east-1.amazonaws.com/&#x27;,\n &#x27;url_path&#x27;: &#x27;/&#x27;}</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>self</td>\n                                    <td class=\"code\">\n                                        <pre>&lt;botocore.client.Organizations object at 0x7f7db8e7e470&gt;</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>service_id</td>\n                                    <td class=\"code\">\n                                        <pre>&#x27;organizations&#x27;</pre>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>service_name</td>\n                                    <td class=\"code\">\n                                        <pre>&#x27;organizations&#x27;</pre>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </li>\n                </ul>\n            </div>\n            <form action=\"https://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\n                <div id=\"pastebinTraceback\" class=\"pastebin\">\n                    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\n                    <input type=\"hidden\" name=\"title\"\n      value=\"AccessDeniedException at /organizations/list-accounts/\">\n                    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\n                    <input type=\"hidden\" name=\"poster\" value=\"Django\">\n                    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\nEnvironment:\n\n\nRequest Method: GET\nRequest URL: https://dev.aws.api.stompy.io/organizations/list-accounts/?caid=37\n\nDjango Version: 3.2\nPython Version: 3.6.13\nInstalled Applications:\n[&#x27;django.contrib.admin&#x27;,\n &#x27;django.contrib.auth&#x27;,\n &#x27;django.contrib.contenttypes&#x27;,\n &#x27;django.contrib.sessions&#x27;,\n &#x27;django.contrib.messages&#x27;,\n &#x27;django.contrib.staticfiles&#x27;,\n &#x27;rest_framework&#x27;,\n &#x27;rest_framework_api_key&#x27;,\n &#x27;corsheaders&#x27;,\n &#x27;core&#x27;,\n &#x27;spotainer&#x27;]\nInstalled Middleware:\n[&#x27;corsheaders.middleware.CorsMiddleware&#x27;,\n &#x27;django.middleware.security.SecurityMiddleware&#x27;,\n &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,\n &#x27;django.middleware.common.CommonMiddleware&#x27;,\n &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,\n &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,\n &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,\n &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]\n\n\n\nTraceback (most recent call last):\n  File \"/var/task/django/core/handlers/exception.py\", line 47, in inner\n    response = get_response(request)\n  File \"/var/task/django/core/handlers/base.py\", line 181, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n  File \"/var/task/sentry_sdk/integrations/django/views.py\", line 67, in sentry_wrapped_callback\n    return callback(request, *args, **kwargs)\n  File \"/var/task/django/views/decorators/csrf.py\", line 54, in wrapped_view\n    return view_func(*args, **kwargs)\n  File \"/var/task/django/views/generic/base.py\", line 70, in view\n    return self.dispatch(request, *args, **kwargs)\n  File \"/var/task/rest_framework/views.py\", line 509, in dispatch\n    response = self.handle_exception(exc)\n  File \"/var/task/rest_framework/views.py\", line 469, in handle_exception\n    self.raise_uncaught_exception(exc)\n  File \"/var/task/rest_framework/views.py\", line 480, in raise_uncaught_exception\n    raise exc\n  File \"/var/task/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"/var/task/core/decorators.py\", line 30, in wrapper\n    return func(*args, **kwargs)\n  File \"/var/task/core/views.py\", line 171, in get\n    result = client.list_accounts()\n  File \"/var/task/core/decorators.py\", line 14, in wrapper\n    return func(*args, **kwargs)\n  File \"/var/task/core/clients/organizations.py\", line 18, in list_accounts\n    response = organizations_client.list_accounts()\n  File \"/var/runtime/botocore/client.py\", line 357, in _api_call\n    return self._make_api_call(operation_name, kwargs)\n  File \"/var/runtime/botocore/client.py\", line 676, in _make_api_call\n    raise error_class(parsed_response, operation_name)\n\nException Type: AccessDeniedException at /organizations/list-accounts/\nException Value: An error occurred (AccessDeniedException) when calling the ListAccounts operation: You don&#x27;t have permissions to access this resource.\n</textarea>\n                    <br>\n                    <br>\n                    <input type=\"submit\" value=\"Share this traceback on a public website\">\n  \n                </div>\n            </form>\n        </div>\n        <div id=\"requestinfo\">\n            <h2>Request information</h2>\n            <h3 id=\"user-info\">USER</h3>\n            <p>TokenUser 37</p>\n            <h3 id=\"get-info\">GET</h3>\n            <table class=\"req\">\n                <thead>\n                    <tr>\n                        <th>Variable</th>\n                        <th>Value</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>caid</td>\n                        <td class=\"code\">\n                            <pre>&#x27;37&#x27;</pre>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n            <h3 id=\"post-info\">POST</h3>\n            <p>No POST data</p>\n            <h3 id=\"files-info\">FILES</h3>\n            <p>No FILES data</p>\n            <h3 id=\"cookie-info\">COOKIES</h3>\n            <p>No cookie data</p>\n            <h3 id=\"meta-info\">META</h3>\n            <table class=\"req\">\n                <thead>\n                    <tr>\n                        <th>Variable</th>\n                        <th>Value</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>HTTPS</td>\n                        <td class=\"code\">\n                            <pre>&#x27;on&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_ACCEPT</td>\n                        <td class=\"code\">\n                            <pre>&#x27;*/*&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_ACCEPT_ENCODING</td>\n                        <td class=\"code\">\n                            <pre>&#x27;gzip, deflate, br&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_AUTHORIZATION</td>\n                        <td class=\"code\">\n                            <pre>(&#x27;JWT &#x27;\n &#x27;eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjI3NjMwOTU0LCJqdGkiOiIxZWRhOGVmNjgzZWE0MDdlYmFlNDk2ZTdiNTVkNDQwYyIsInVzZXJfaWQiOjM3LCJjYWlkIjpudWxsfQ.a1iBgs-kpM5HRN9wnMMBAJLaS_OxaLG5E8lHDQSgCCI&#x27;)</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_CLOUDFRONT_FORWARDED_PROTO</td>\n                        <td class=\"code\">\n                            <pre>&#x27;https&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_CLOUDFRONT_IS_DESKTOP_VIEWER</td>\n                        <td class=\"code\">\n                            <pre>&#x27;true&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_CLOUDFRONT_IS_MOBILE_VIEWER</td>\n                        <td class=\"code\">\n                            <pre>&#x27;false&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_CLOUDFRONT_IS_SMARTTV_VIEWER</td>\n                        <td class=\"code\">\n                            <pre>&#x27;false&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_CLOUDFRONT_IS_TABLET_VIEWER</td>\n                        <td class=\"code\">\n                            <pre>&#x27;false&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_CLOUDFRONT_VIEWER_COUNTRY</td>\n                        <td class=\"code\">\n                            <pre>&#x27;CN&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_HOST</td>\n                        <td class=\"code\">\n                            <pre>&#x27;dev.aws.api.stompy.io&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_POSTMAN_TOKEN</td>\n                        <td class=\"code\">\n                            <pre>&#x27;********************&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_USER_AGENT</td>\n                        <td class=\"code\">\n                            <pre>&#x27;PostmanRuntime/7.28.2&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_VIA</td>\n                        <td class=\"code\">\n                            <pre>&#x27;1.1 abadcc740cb3a709cff4a366c9ac489b.cloudfront.net (CloudFront)&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_X_AMZN_TRACE_ID</td>\n                        <td class=\"code\">\n                            <pre>&#x27;Root=1-6103ac5a-0f69a17074dcc3580bbf5987&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_X_AMZ_CF_ID</td>\n                        <td class=\"code\">\n                            <pre>&#x27;T4H3Vuw3cQ9VuOpPfwkI8qSy0OLxpRCFNtblkR_hSun30dDvg4Lwpg==&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_X_FORWARDED_FOR</td>\n                        <td class=\"code\">\n                            <pre>&#x27;113.110.227.97, 130.176.129.139&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_X_FORWARDED_PORT</td>\n                        <td class=\"code\">\n                            <pre>&#x27;443&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_X_FORWARDED_PROTO</td>\n                        <td class=\"code\">\n                            <pre>&#x27;https&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>PATH_INFO</td>\n                        <td class=\"code\">\n                            <pre>&#x27;/organizations/list-accounts/&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>QUERY_STRING</td>\n                        <td class=\"code\">\n                            <pre>&#x27;caid=37&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>REMOTE_ADDR</td>\n                        <td class=\"code\">\n                            <pre>&#x27;113.110.227.97&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>REQUEST_METHOD</td>\n                        <td class=\"code\">\n                            <pre>&#x27;GET&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SCRIPT_NAME</td>\n                        <td class=\"code\">\n                            <pre>&#x27;&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SERVER_NAME</td>\n                        <td class=\"code\">\n                            <pre>&#x27;zappa&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SERVER_PORT</td>\n                        <td class=\"code\">\n                            <pre>&#x27;443&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SERVER_PROTOCOL</td>\n                        <td class=\"code\">\n                            <pre>&#x27;HTTP/1.1&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>lambda.context</td>\n                        <td class=\"code\">\n                            <pre>&lt;__main__.LambdaContext object at 0x7f7db2d5da20&gt;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>lambda.event</td>\n                        <td class=\"code\">\n                            <pre>{&#x27;body&#x27;: None,\n &#x27;headers&#x27;: {&#x27;Accept&#x27;: &#x27;*/*&#x27;,\n             &#x27;Accept-Encoding&#x27;: &#x27;gzip, deflate, br&#x27;,\n             &#x27;Authorization&#x27;: &#x27;JWT &#x27;\n                              &#x27;eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjI3NjMwOTU0LCJqdGkiOiIxZWRhOGVmNjgzZWE0MDdlYmFlNDk2ZTdiNTVkNDQwYyIsInVzZXJfaWQiOjM3LCJjYWlkIjpudWxsfQ.a1iBgs-kpM5HRN9wnMMBAJLaS_OxaLG5E8lHDQSgCCI&#x27;,\n             &#x27;CloudFront-Forwarded-Proto&#x27;: &#x27;https&#x27;,\n             &#x27;CloudFront-Is-Desktop-Viewer&#x27;: &#x27;true&#x27;,\n             &#x27;CloudFront-Is-Mobile-Viewer&#x27;: &#x27;false&#x27;,\n             &#x27;CloudFront-Is-SmartTV-Viewer&#x27;: &#x27;false&#x27;,\n             &#x27;CloudFront-Is-Tablet-Viewer&#x27;: &#x27;false&#x27;,\n             &#x27;CloudFront-Viewer-Country&#x27;: &#x27;CN&#x27;,\n             &#x27;Host&#x27;: &#x27;dev.aws.api.stompy.io&#x27;,\n             &#x27;Postman-Token&#x27;: &#x27;********************&#x27;,\n             &#x27;User-Agent&#x27;: &#x27;PostmanRuntime/7.28.2&#x27;,\n             &#x27;Via&#x27;: &#x27;1.1 abadcc740cb3a709cff4a366c9ac489b.cloudfront.net &#x27;\n                    &#x27;(CloudFront)&#x27;,\n             &#x27;X-Amz-Cf-Id&#x27;: &#x27;T4H3Vuw3cQ9VuOpPfwkI8qSy0OLxpRCFNtblkR_hSun30dDvg4Lwpg==&#x27;,\n             &#x27;X-Amzn-Trace-Id&#x27;: &#x27;Root=1-6103ac5a-0f69a17074dcc3580bbf5987&#x27;,\n             &#x27;X-Forwarded-For&#x27;: &#x27;113.110.227.97, 130.176.129.139&#x27;,\n             &#x27;X-Forwarded-Port&#x27;: &#x27;443&#x27;,\n             &#x27;X-Forwarded-Proto&#x27;: &#x27;https&#x27;},\n &#x27;httpMethod&#x27;: &#x27;GET&#x27;,\n &#x27;isBase64Encoded&#x27;: False,\n &#x27;multiValueHeaders&#x27;: {&#x27;Accept&#x27;: [&#x27;*/*&#x27;],\n                       &#x27;Accept-Encoding&#x27;: [&#x27;gzip, deflate, br&#x27;],\n                       &#x27;Authorization&#x27;: [&#x27;JWT &#x27;\n                                         &#x27;eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjI3NjMwOTU0LCJqdGkiOiIxZWRhOGVmNjgzZWE0MDdlYmFlNDk2ZTdiNTVkNDQwYyIsInVzZXJfaWQiOjM3LCJjYWlkIjpudWxsfQ.a1iBgs-kpM5HRN9wnMMBAJLaS_OxaLG5E8lHDQSgCCI&#x27;],\n                       &#x27;CloudFront-Forwarded-Proto&#x27;: [&#x27;https&#x27;],\n                       &#x27;CloudFront-Is-Desktop-Viewer&#x27;: [&#x27;true&#x27;],\n                       &#x27;CloudFront-Is-Mobile-Viewer&#x27;: [&#x27;false&#x27;],\n                       &#x27;CloudFront-Is-SmartTV-Viewer&#x27;: [&#x27;false&#x27;],\n                       &#x27;CloudFront-Is-Tablet-Viewer&#x27;: [&#x27;false&#x27;],\n                       &#x27;CloudFront-Viewer-Country&#x27;: [&#x27;CN&#x27;],\n                       &#x27;Host&#x27;: [&#x27;dev.aws.api.stompy.io&#x27;],\n                       &#x27;Postman-Token&#x27;: &#x27;********************&#x27;,\n                       &#x27;User-Agent&#x27;: [&#x27;PostmanRuntime/7.28.2&#x27;],\n                       &#x27;Via&#x27;: [&#x27;1.1 &#x27;\n                               &#x27;abadcc740cb3a709cff4a366c9ac489b.cloudfront.net &#x27;\n                               &#x27;(CloudFront)&#x27;],\n                       &#x27;X-Amz-Cf-Id&#x27;: [&#x27;T4H3Vuw3cQ9VuOpPfwkI8qSy0OLxpRCFNtblkR_hSun30dDvg4Lwpg==&#x27;],\n                       &#x27;X-Amzn-Trace-Id&#x27;: [&#x27;Root=1-6103ac5a-0f69a17074dcc3580bbf5987&#x27;],\n                       &#x27;X-Forwarded-For&#x27;: [&#x27;113.110.227.97, 130.176.129.139&#x27;],\n                       &#x27;X-Forwarded-Port&#x27;: [&#x27;443&#x27;],\n                       &#x27;X-Forwarded-Proto&#x27;: [&#x27;https&#x27;]},\n &#x27;multiValueQueryStringParameters&#x27;: {&#x27;caid&#x27;: [&#x27;37&#x27;]},\n &#x27;path&#x27;: &#x27;/organizations/list-accounts/&#x27;,\n &#x27;pathParameters&#x27;: {&#x27;proxy&#x27;: &#x27;organizations/list-accounts&#x27;},\n &#x27;queryStringParameters&#x27;: {&#x27;caid&#x27;: &#x27;37&#x27;},\n &#x27;requestContext&#x27;: {&#x27;accountId&#x27;: &#x27;263078123597&#x27;,\n                    &#x27;apiId&#x27;: &#x27;********************&#x27;,\n                    &#x27;domainName&#x27;: &#x27;dev.aws.api.stompy.io&#x27;,\n                    &#x27;domainPrefix&#x27;: &#x27;dev&#x27;,\n                    &#x27;extendedRequestId&#x27;: &#x27;DRfeIGXByQ0FeqQ=&#x27;,\n                    &#x27;httpMethod&#x27;: &#x27;GET&#x27;,\n                    &#x27;identity&#x27;: {&#x27;accessKey&#x27;: &#x27;********************&#x27;,\n                                 &#x27;accountId&#x27;: None,\n                                 &#x27;caller&#x27;: None,\n                                 &#x27;cognitoAuthenticationProvider&#x27;: None,\n                                 &#x27;cognitoAuthenticationType&#x27;: None,\n                                 &#x27;cognitoIdentityId&#x27;: None,\n                                 &#x27;cognitoIdentityPoolId&#x27;: None,\n                                 &#x27;principalOrgId&#x27;: None,\n                                 &#x27;sourceIp&#x27;: &#x27;113.110.227.97&#x27;,\n                                 &#x27;user&#x27;: None,\n                                 &#x27;userAgent&#x27;: &#x27;PostmanRuntime/7.28.2&#x27;,\n                                 &#x27;userArn&#x27;: None},\n                    &#x27;path&#x27;: &#x27;/organizations/list-accounts/&#x27;,\n                    &#x27;protocol&#x27;: &#x27;HTTP/1.1&#x27;,\n                    &#x27;requestId&#x27;: &#x27;b04f9235-5b9a-42be-8f93-abab49325ea3&#x27;,\n                    &#x27;requestTime&#x27;: &#x27;30/Jul/2021:07:38:02 +0000&#x27;,\n                    &#x27;requestTimeEpoch&#x27;: 1627630682232,\n                    &#x27;resourceId&#x27;: &#x27;5oznmm&#x27;,\n                    &#x27;resourcePath&#x27;: &#x27;/{proxy+}&#x27;,\n                    &#x27;stage&#x27;: &#x27;dev&#x27;},\n &#x27;resource&#x27;: &#x27;/{proxy+}&#x27;,\n &#x27;stageVariables&#x27;: None}</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>wsgi.errors</td>\n                        <td class=\"code\">\n                            <pre>&lt;__main__.CustomFile object at 0x7f7de25a9240&gt;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>wsgi.input</td>\n                        <td class=\"code\">\n                            <pre>None</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>wsgi.multiprocess</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>wsgi.multithread</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>wsgi.run_once</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>wsgi.url_scheme</td>\n                        <td class=\"code\">\n                            <pre>&#x27;https&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>wsgi.version</td>\n                        <td class=\"code\">\n                            <pre>(1, 0)</pre>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n            <h3 id=\"settings-info\">Settings</h3>\n            <h4>Using settings module \n                <code>config.settings_dev</code>\n            </h4>\n            <table class=\"req\">\n                <thead>\n                    <tr>\n                        <th>Setting</th>\n                        <th>Value</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>ABSOLUTE_URL_OVERRIDES</td>\n                        <td class=\"code\">\n                            <pre>{}</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>ADMINS</td>\n                        <td class=\"code\">\n                            <pre>[]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>ALLOWED_HOSTS</td>\n                        <td class=\"code\">\n                            <pre>[&#x27;dev.aws.api.stompy.io&#x27;]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>API_KEY</td>\n                        <td class=\"code\">\n                            <pre>&#x27;********************&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>APPEND_SLASH</td>\n                        <td class=\"code\">\n                            <pre>True</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>AUTHENTICATION_BACKENDS</td>\n                        <td class=\"code\">\n                            <pre>[&#x27;django.contrib.auth.backends.ModelBackend&#x27;]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>AUTH_PASSWORD_VALIDATORS</td>\n                        <td class=\"code\">\n                            <pre>&#x27;********************&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>AUTH_USER_MODEL</td>\n                        <td class=\"code\">\n                            <pre>&#x27;auth.User&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>AWS</td>\n                        <td class=\"code\">\n                            <pre>{&#x27;ACCESS_KEY_ID&#x27;: &#x27;********************&#x27;,\n &#x27;REGION_NAME&#x27;: &#x27;ap-southeast-1&#x27;,\n &#x27;SECRET_ACCCESS_KEY&#x27;: &#x27;********************&#x27;}</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>AWS_S3_BUCKET_AUTH</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>AWS_S3_BUCKET_NAME_STATIC</td>\n                        <td class=\"code\">\n                            <pre>&#x27;awsanalyzer-dev&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>BASE_DIR</td>\n                        <td class=\"code\">\n                            <pre>PosixPath(&#x27;/var/task&#x27;)</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>BLOCK_AWS_PURCHASES</td>\n                        <td class=\"code\">\n                            <pre>True</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CACHES</td>\n                        <td class=\"code\">\n                            <pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.db.DatabaseCache&#x27;,\n             &#x27;LOCATION&#x27;: &#x27;django_cache&#x27;}}</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CACHE_MIDDLEWARE_ALIAS</td>\n                        <td class=\"code\">\n                            <pre>&#x27;default&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>\n                        <td class=\"code\">\n                            <pre>&#x27;********************&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CACHE_MIDDLEWARE_SECONDS</td>\n                        <td class=\"code\">\n                            <pre>600</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CORS_ALLOWED_ORIGINS</td>\n                        <td class=\"code\">\n                            <pre>[&#x27;http://localhost:8080&#x27;, &#x27;http://127.0.0.1:8080&#x27;]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CORS_ALLOWED_ORIGIN_REGEXES</td>\n                        <td class=\"code\">\n                            <pre>[&#x27;^https?://(.+\\\\.)?stompy\\\\.io&#x27;]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CSRF_COOKIE_AGE</td>\n                        <td class=\"code\">\n                            <pre>31449600</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CSRF_COOKIE_DOMAIN</td>\n                        <td class=\"code\">\n                            <pre>None</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CSRF_COOKIE_HTTPONLY</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CSRF_COOKIE_NAME</td>\n                        <td class=\"code\">\n                            <pre>&#x27;csrftoken&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CSRF_COOKIE_PATH</td>\n                        <td class=\"code\">\n                            <pre>&#x27;/&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CSRF_COOKIE_SAMESITE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;Lax&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CSRF_COOKIE_SECURE</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CSRF_FAILURE_VIEW</td>\n                        <td class=\"code\">\n                            <pre>&#x27;django.views.csrf.csrf_failure&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CSRF_HEADER_NAME</td>\n                        <td class=\"code\">\n                            <pre>&#x27;HTTP_X_CSRFTOKEN&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CSRF_TRUSTED_ORIGINS</td>\n                        <td class=\"code\">\n                            <pre>[]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CSRF_USE_SESSIONS</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DATABASES</td>\n                        <td class=\"code\">\n                            <pre>{&#x27;default&#x27;: {&#x27;ATOMIC_REQUESTS&#x27;: False,\n             &#x27;AUTOCOMMIT&#x27;: True,\n             &#x27;CONN_MAX_AGE&#x27;: 0,\n             &#x27;ENGINE&#x27;: &#x27;django.db.backends.postgresql&#x27;,\n             &#x27;HOST&#x27;: &#x27;stompyapis-dev.cluster-clribtg24tch.ap-southeast-1.rds.amazonaws.com&#x27;,\n             &#x27;NAME&#x27;: &#x27;awsanalyzerv1&#x27;,\n             &#x27;OPTIONS&#x27;: {},\n             &#x27;PASSWORD&#x27;: &#x27;********************&#x27;,\n             &#x27;PORT&#x27;: &#x27;&#x27;,\n             &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None,\n                      &#x27;COLLATION&#x27;: None,\n                      &#x27;MIGRATE&#x27;: True,\n                      &#x27;MIRROR&#x27;: None,\n                      &#x27;NAME&#x27;: None},\n             &#x27;TIME_ZONE&#x27;: None,\n             &#x27;USER&#x27;: &#x27;postgres&#x27;}}</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DATABASE_ROUTERS</td>\n                        <td class=\"code\">\n                            <pre>[]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>\n                        <td class=\"code\">\n                            <pre>2621440</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>\n                        <td class=\"code\">\n                            <pre>1000</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DATETIME_FORMAT</td>\n                        <td class=\"code\">\n                            <pre>&#x27;N j, Y, P&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DATETIME_INPUT_FORMATS</td>\n                        <td class=\"code\">\n                            <pre>[&#x27;%Y-%m-%d %H:%M:%S&#x27;,\n &#x27;%Y-%m-%d %H:%M:%S.%f&#x27;,\n &#x27;%Y-%m-%d %H:%M&#x27;,\n &#x27;%m/%d/%Y %H:%M:%S&#x27;,\n &#x27;%m/%d/%Y %H:%M:%S.%f&#x27;,\n &#x27;%m/%d/%Y %H:%M&#x27;,\n &#x27;%m/%d/%y %H:%M:%S&#x27;,\n &#x27;%m/%d/%y %H:%M:%S.%f&#x27;,\n &#x27;%m/%d/%y %H:%M&#x27;]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DATE_FORMAT</td>\n                        <td class=\"code\">\n                            <pre>&#x27;N j, Y&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DATE_INPUT_FORMATS</td>\n                        <td class=\"code\">\n                            <pre>[&#x27;%Y-%m-%d&#x27;,\n &#x27;%m/%d/%Y&#x27;,\n &#x27;%m/%d/%y&#x27;,\n &#x27;%b %d %Y&#x27;,\n &#x27;%b %d, %Y&#x27;,\n &#x27;%d %b %Y&#x27;,\n &#x27;%d %b, %Y&#x27;,\n &#x27;%B %d %Y&#x27;,\n &#x27;%B %d, %Y&#x27;,\n &#x27;%d %B %Y&#x27;,\n &#x27;%d %B, %Y&#x27;]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DEBUG</td>\n                        <td class=\"code\">\n                            <pre>True</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DEBUG_PROPAGATE_EXCEPTIONS</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DECIMAL_SEPARATOR</td>\n                        <td class=\"code\">\n                            <pre>&#x27;.&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DEFAULT_AUTO_FIELD</td>\n                        <td class=\"code\">\n                            <pre>&#x27;django.db.models.BigAutoField&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DEFAULT_CHARSET</td>\n                        <td class=\"code\">\n                            <pre>&#x27;utf-8&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DEFAULT_EXCEPTION_REPORTER</td>\n                        <td class=\"code\">\n                            <pre>&#x27;django.views.debug.ExceptionReporter&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>\n                        <td class=\"code\">\n                            <pre>&#x27;django.views.debug.SafeExceptionReporterFilter&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DEFAULT_FILE_STORAGE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;django_s3_storage.storage.S3Storage&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DEFAULT_FROM_EMAIL</td>\n                        <td class=\"code\">\n                            <pre>&#x27;webmaster@localhost&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DEFAULT_HASHING_ALGORITHM</td>\n                        <td class=\"code\">\n                            <pre>&#x27;sha256&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DEFAULT_INDEX_TABLESPACE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DEFAULT_TABLESPACE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DISALLOWED_USER_AGENTS</td>\n                        <td class=\"code\">\n                            <pre>[]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>EMAIL_BACKEND</td>\n                        <td class=\"code\">\n                            <pre>&#x27;django.core.mail.backends.smtp.EmailBackend&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>EMAIL_HOST</td>\n                        <td class=\"code\">\n                            <pre>&#x27;localhost&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>EMAIL_HOST_PASSWORD</td>\n                        <td class=\"code\">\n                            <pre>&#x27;********************&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>EMAIL_HOST_USER</td>\n                        <td class=\"code\">\n                            <pre>&#x27;&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>EMAIL_PORT</td>\n                        <td class=\"code\">\n                            <pre>25</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>EMAIL_SSL_CERTFILE</td>\n                        <td class=\"code\">\n                            <pre>None</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>EMAIL_SSL_KEYFILE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;********************&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>EMAIL_SUBJECT_PREFIX</td>\n                        <td class=\"code\">\n                            <pre>&#x27;[Django] &#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>EMAIL_TIMEOUT</td>\n                        <td class=\"code\">\n                            <pre>None</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>EMAIL_USE_LOCALTIME</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>EMAIL_USE_SSL</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>EMAIL_USE_TLS</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>\n                        <td class=\"code\">\n                            <pre>None</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>FILE_UPLOAD_HANDLERS</td>\n                        <td class=\"code\">\n                            <pre>[&#x27;django.core.files.uploadhandler.MemoryFileUploadHandler&#x27;,\n &#x27;django.core.files.uploadhandler.TemporaryFileUploadHandler&#x27;]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>\n                        <td class=\"code\">\n                            <pre>2621440</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>FILE_UPLOAD_PERMISSIONS</td>\n                        <td class=\"code\">\n                            <pre>420</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>FILE_UPLOAD_TEMP_DIR</td>\n                        <td class=\"code\">\n                            <pre>None</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>FIRST_DAY_OF_WEEK</td>\n                        <td class=\"code\">\n                            <pre>0</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>FIXTURE_DIRS</td>\n                        <td class=\"code\">\n                            <pre>[]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>FORCE_SCRIPT_NAME</td>\n                        <td class=\"code\">\n                            <pre>None</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>FORMAT_MODULE_PATH</td>\n                        <td class=\"code\">\n                            <pre>None</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>FORM_RENDERER</td>\n                        <td class=\"code\">\n                            <pre>&#x27;django.forms.renderers.DjangoTemplates&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>IGNORABLE_404_URLS</td>\n                        <td class=\"code\">\n                            <pre>[]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>INSTALLED_APPS</td>\n                        <td class=\"code\">\n                            <pre>[&#x27;django.contrib.admin&#x27;,\n &#x27;django.contrib.auth&#x27;,\n &#x27;django.contrib.contenttypes&#x27;,\n &#x27;django.contrib.sessions&#x27;,\n &#x27;django.contrib.messages&#x27;,\n &#x27;django.contrib.staticfiles&#x27;,\n &#x27;rest_framework&#x27;,\n &#x27;rest_framework_api_key&#x27;,\n &#x27;corsheaders&#x27;,\n &#x27;core&#x27;,\n &#x27;spotainer&#x27;]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>INTERNAL_IPS</td>\n                        <td class=\"code\">\n                            <pre>[]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>LANGUAGES</td>\n                        <td class=\"code\">\n                            <pre>[(&#x27;af&#x27;, &#x27;Afrikaans&#x27;),\n (&#x27;ar&#x27;, &#x27;Arabic&#x27;),\n (&#x27;ar-dz&#x27;, &#x27;Algerian Arabic&#x27;),\n (&#x27;ast&#x27;, &#x27;Asturian&#x27;),\n (&#x27;az&#x27;, &#x27;Azerbaijani&#x27;),\n (&#x27;bg&#x27;, &#x27;Bulgarian&#x27;),\n (&#x27;be&#x27;, &#x27;Belarusian&#x27;),\n (&#x27;bn&#x27;, &#x27;Bengali&#x27;),\n (&#x27;br&#x27;, &#x27;Breton&#x27;),\n (&#x27;bs&#x27;, &#x27;Bosnian&#x27;),\n (&#x27;ca&#x27;, &#x27;Catalan&#x27;),\n (&#x27;cs&#x27;, &#x27;Czech&#x27;),\n (&#x27;cy&#x27;, &#x27;Welsh&#x27;),\n (&#x27;da&#x27;, &#x27;Danish&#x27;),\n (&#x27;de&#x27;, &#x27;German&#x27;),\n (&#x27;dsb&#x27;, &#x27;Lower Sorbian&#x27;),\n (&#x27;el&#x27;, &#x27;Greek&#x27;),\n (&#x27;en&#x27;, &#x27;English&#x27;),\n (&#x27;en-au&#x27;, &#x27;Australian English&#x27;),\n (&#x27;en-gb&#x27;, &#x27;British English&#x27;),\n (&#x27;eo&#x27;, &#x27;Esperanto&#x27;),\n (&#x27;es&#x27;, &#x27;Spanish&#x27;),\n (&#x27;es-ar&#x27;, &#x27;Argentinian Spanish&#x27;),\n (&#x27;es-co&#x27;, &#x27;Colombian Spanish&#x27;),\n (&#x27;es-mx&#x27;, &#x27;Mexican Spanish&#x27;),\n (&#x27;es-ni&#x27;, &#x27;Nicaraguan Spanish&#x27;),\n (&#x27;es-ve&#x27;, &#x27;Venezuelan Spanish&#x27;),\n (&#x27;et&#x27;, &#x27;Estonian&#x27;),\n (&#x27;eu&#x27;, &#x27;Basque&#x27;),\n (&#x27;fa&#x27;, &#x27;Persian&#x27;),\n (&#x27;fi&#x27;, &#x27;Finnish&#x27;),\n (&#x27;fr&#x27;, &#x27;French&#x27;),\n (&#x27;fy&#x27;, &#x27;Frisian&#x27;),\n (&#x27;ga&#x27;, &#x27;Irish&#x27;),\n (&#x27;gd&#x27;, &#x27;Scottish Gaelic&#x27;),\n (&#x27;gl&#x27;, &#x27;Galician&#x27;),\n (&#x27;he&#x27;, &#x27;Hebrew&#x27;),\n (&#x27;hi&#x27;, &#x27;Hindi&#x27;),\n (&#x27;hr&#x27;, &#x27;Croatian&#x27;),\n (&#x27;hsb&#x27;, &#x27;Upper Sorbian&#x27;),\n (&#x27;hu&#x27;, &#x27;Hungarian&#x27;),\n (&#x27;hy&#x27;, &#x27;Armenian&#x27;),\n (&#x27;ia&#x27;, &#x27;Interlingua&#x27;),\n (&#x27;id&#x27;, &#x27;Indonesian&#x27;),\n (&#x27;ig&#x27;, &#x27;Igbo&#x27;),\n (&#x27;io&#x27;, &#x27;Ido&#x27;),\n (&#x27;is&#x27;, &#x27;Icelandic&#x27;),\n (&#x27;it&#x27;, &#x27;Italian&#x27;),\n (&#x27;ja&#x27;, &#x27;Japanese&#x27;),\n (&#x27;ka&#x27;, &#x27;Georgian&#x27;),\n (&#x27;kab&#x27;, &#x27;Kabyle&#x27;),\n (&#x27;kk&#x27;, &#x27;Kazakh&#x27;),\n (&#x27;km&#x27;, &#x27;Khmer&#x27;),\n (&#x27;kn&#x27;, &#x27;Kannada&#x27;),\n (&#x27;ko&#x27;, &#x27;Korean&#x27;),\n (&#x27;ky&#x27;, &#x27;Kyrgyz&#x27;),\n (&#x27;lb&#x27;, &#x27;Luxembourgish&#x27;),\n (&#x27;lt&#x27;, &#x27;Lithuanian&#x27;),\n (&#x27;lv&#x27;, &#x27;Latvian&#x27;),\n (&#x27;mk&#x27;, &#x27;Macedonian&#x27;),\n (&#x27;ml&#x27;, &#x27;Malayalam&#x27;),\n (&#x27;mn&#x27;, &#x27;Mongolian&#x27;),\n (&#x27;mr&#x27;, &#x27;Marathi&#x27;),\n (&#x27;my&#x27;, &#x27;Burmese&#x27;),\n (&#x27;nb&#x27;, &#x27;Norwegian Bokmål&#x27;),\n (&#x27;ne&#x27;, &#x27;Nepali&#x27;),\n (&#x27;nl&#x27;, &#x27;Dutch&#x27;),\n (&#x27;nn&#x27;, &#x27;Norwegian Nynorsk&#x27;),\n (&#x27;os&#x27;, &#x27;Ossetic&#x27;),\n (&#x27;pa&#x27;, &#x27;Punjabi&#x27;),\n (&#x27;pl&#x27;, &#x27;Polish&#x27;),\n (&#x27;pt&#x27;, &#x27;Portuguese&#x27;),\n (&#x27;pt-br&#x27;, &#x27;Brazilian Portuguese&#x27;),\n (&#x27;ro&#x27;, &#x27;Romanian&#x27;),\n (&#x27;ru&#x27;, &#x27;Russian&#x27;),\n (&#x27;sk&#x27;, &#x27;Slovak&#x27;),\n (&#x27;sl&#x27;, &#x27;Slovenian&#x27;),\n (&#x27;sq&#x27;, &#x27;Albanian&#x27;),\n (&#x27;sr&#x27;, &#x27;Serbian&#x27;),\n (&#x27;sr-latn&#x27;, &#x27;Serbian Latin&#x27;),\n (&#x27;sv&#x27;, &#x27;Swedish&#x27;),\n (&#x27;sw&#x27;, &#x27;Swahili&#x27;),\n (&#x27;ta&#x27;, &#x27;Tamil&#x27;),\n (&#x27;te&#x27;, &#x27;Telugu&#x27;),\n (&#x27;tg&#x27;, &#x27;Tajik&#x27;),\n (&#x27;th&#x27;, &#x27;Thai&#x27;),\n (&#x27;tk&#x27;, &#x27;Turkmen&#x27;),\n (&#x27;tr&#x27;, &#x27;Turkish&#x27;),\n (&#x27;tt&#x27;, &#x27;Tatar&#x27;),\n (&#x27;udm&#x27;, &#x27;Udmurt&#x27;),\n (&#x27;uk&#x27;, &#x27;Ukrainian&#x27;),\n (&#x27;ur&#x27;, &#x27;Urdu&#x27;),\n (&#x27;uz&#x27;, &#x27;Uzbek&#x27;),\n (&#x27;vi&#x27;, &#x27;Vietnamese&#x27;),\n (&#x27;zh-hans&#x27;, &#x27;Simplified Chinese&#x27;),\n (&#x27;zh-hant&#x27;, &#x27;Traditional Chinese&#x27;)]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>LANGUAGES_BIDI</td>\n                        <td class=\"code\">\n                            <pre>[&#x27;he&#x27;, &#x27;ar&#x27;, &#x27;ar-dz&#x27;, &#x27;fa&#x27;, &#x27;ur&#x27;]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>LANGUAGE_CODE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;en-us&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>LANGUAGE_COOKIE_AGE</td>\n                        <td class=\"code\">\n                            <pre>None</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>LANGUAGE_COOKIE_DOMAIN</td>\n                        <td class=\"code\">\n                            <pre>None</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>LANGUAGE_COOKIE_HTTPONLY</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>LANGUAGE_COOKIE_NAME</td>\n                        <td class=\"code\">\n                            <pre>&#x27;django_language&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>LANGUAGE_COOKIE_PATH</td>\n                        <td class=\"code\">\n                            <pre>&#x27;/&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>LANGUAGE_COOKIE_SAMESITE</td>\n                        <td class=\"code\">\n                            <pre>None</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>LANGUAGE_COOKIE_SECURE</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>LOCALE_PATHS</td>\n                        <td class=\"code\">\n                            <pre>[]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>LOGGING</td>\n                        <td class=\"code\">\n                            <pre>{&#x27;disable_existing_loggers&#x27;: False,\n &#x27;formatters&#x27;: {&#x27;simple&#x27;: {&#x27;datefmt&#x27;: &#x27;%Y-%m-%dT%H:%M:%S&#x27;,\n                           &#x27;format&#x27;: &#x27;%(asctime)s Stompy.IO dev.aws &#x27;\n                                     &#x27;%(message)s&#x27;}},\n &#x27;handlers&#x27;: {&#x27;papertrail&#x27;: {&#x27;address&#x27;: (&#x27;logs.papertrailapp.com&#x27;, 30311),\n                             &#x27;class&#x27;: &#x27;logging.handlers.SysLogHandler&#x27;,\n                             &#x27;formatter&#x27;: &#x27;simple&#x27;,\n                             &#x27;level&#x27;: &#x27;DEBUG&#x27;}},\n &#x27;loggers&#x27;: {&#x27;core&#x27;: {&#x27;handlers&#x27;: [&#x27;papertrail&#x27;],\n                      &#x27;level&#x27;: &#x27;WARNING&#x27;,\n                      &#x27;propagate&#x27;: False}},\n &#x27;version&#x27;: 1}</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>LOGGING_CONFIG</td>\n                        <td class=\"code\">\n                            <pre>&#x27;logging.config.dictConfig&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>LOGIN_REDIRECT_URL</td>\n                        <td class=\"code\">\n                            <pre>&#x27;/accounts/profile/&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>LOGIN_URL</td>\n                        <td class=\"code\">\n                            <pre>&#x27;/accounts/login/&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>LOGOUT_REDIRECT_URL</td>\n                        <td class=\"code\">\n                            <pre>None</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>MANAGERS</td>\n                        <td class=\"code\">\n                            <pre>[]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>MEDIA_ROOT</td>\n                        <td class=\"code\">\n                            <pre>&#x27;&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>MEDIA_URL</td>\n                        <td class=\"code\">\n                            <pre>&#x27;/&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>MESSAGE_STORAGE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;django.contrib.messages.storage.fallback.FallbackStorage&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>MIDDLEWARE</td>\n                        <td class=\"code\">\n                            <pre>[&#x27;corsheaders.middleware.CorsMiddleware&#x27;,\n &#x27;django.middleware.security.SecurityMiddleware&#x27;,\n &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,\n &#x27;django.middleware.common.CommonMiddleware&#x27;,\n &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,\n &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,\n &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,\n &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>MIGRATION_MODULES</td>\n                        <td class=\"code\">\n                            <pre>{}</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>MONGODB_CONNECTION</td>\n                        <td class=\"code\">\n                            <pre>&#x27;mongodb+srv://dbuser:UljxA5tuOgT6BkmG@spot-market-scores.mr8yo.mongodb.net/myFirstDatabase?retryWrites=true&amp;w=majority&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>MONTH_DAY_FORMAT</td>\n                        <td class=\"code\">\n                            <pre>&#x27;F j&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>NUMBER_GROUPING</td>\n                        <td class=\"code\">\n                            <pre>0</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>PASSWORD_HASHERS</td>\n                        <td class=\"code\">\n                            <pre>&#x27;********************&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>PASSWORD_RESET_TIMEOUT</td>\n                        <td class=\"code\">\n                            <pre>&#x27;********************&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>PASSWORD_RESET_TIMEOUT_DAYS</td>\n                        <td class=\"code\">\n                            <pre>&#x27;********************&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>PREPEND_WWW</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>REST_FRAMEWORK</td>\n                        <td class=\"code\">\n                            <pre>{&#x27;DEFAULT_AUTHENTICATION_CLASSES&#x27;: (&#x27;rest_framework_simplejwt.authentication.JWTTokenUserAuthentication&#x27;,),\n &#x27;DEFAULT_PERMISSION_CLASSES&#x27;: (&#x27;core.utils.AuthenticatedOrHasAPIKey&#x27;,)}</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>ROOT_URLCONF</td>\n                        <td class=\"code\">\n                            <pre>&#x27;config.urls&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>S3_BUCKET</td>\n                        <td class=\"code\">\n                            <pre>&#x27;awsanalyzer-dev&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SECRET_KEY</td>\n                        <td class=\"code\">\n                            <pre>&#x27;********************&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SECURE_BROWSER_XSS_FILTER</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SECURE_CONTENT_TYPE_NOSNIFF</td>\n                        <td class=\"code\">\n                            <pre>True</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SECURE_HSTS_PRELOAD</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SECURE_HSTS_SECONDS</td>\n                        <td class=\"code\">\n                            <pre>0</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SECURE_PROXY_SSL_HEADER</td>\n                        <td class=\"code\">\n                            <pre>None</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SECURE_REDIRECT_EXEMPT</td>\n                        <td class=\"code\">\n                            <pre>[]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SECURE_REFERRER_POLICY</td>\n                        <td class=\"code\">\n                            <pre>&#x27;same-origin&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SECURE_SSL_HOST</td>\n                        <td class=\"code\">\n                            <pre>None</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SECURE_SSL_REDIRECT</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SERVER_EMAIL</td>\n                        <td class=\"code\">\n                            <pre>&#x27;root@localhost&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SESSION_CACHE_ALIAS</td>\n                        <td class=\"code\">\n                            <pre>&#x27;default&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SESSION_COOKIE_AGE</td>\n                        <td class=\"code\">\n                            <pre>1209600</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SESSION_COOKIE_DOMAIN</td>\n                        <td class=\"code\">\n                            <pre>None</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SESSION_COOKIE_HTTPONLY</td>\n                        <td class=\"code\">\n                            <pre>True</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SESSION_COOKIE_NAME</td>\n                        <td class=\"code\">\n                            <pre>&#x27;sessionid&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SESSION_COOKIE_PATH</td>\n                        <td class=\"code\">\n                            <pre>&#x27;/&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SESSION_COOKIE_SAMESITE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;Lax&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SESSION_COOKIE_SECURE</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SESSION_ENGINE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;django.contrib.sessions.backends.db&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SESSION_FILE_PATH</td>\n                        <td class=\"code\">\n                            <pre>None</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SESSION_SAVE_EVERY_REQUEST</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SESSION_SERIALIZER</td>\n                        <td class=\"code\">\n                            <pre>&#x27;django.contrib.sessions.serializers.JSONSerializer&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SETTINGS_MODULE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;config.settings_dev&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SHORT_DATETIME_FORMAT</td>\n                        <td class=\"code\">\n                            <pre>&#x27;m/d/Y P&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SHORT_DATE_FORMAT</td>\n                        <td class=\"code\">\n                            <pre>&#x27;m/d/Y&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SIGNING_BACKEND</td>\n                        <td class=\"code\">\n                            <pre>&#x27;django.core.signing.TimestampSigner&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SILENCED_SYSTEM_CHECKS</td>\n                        <td class=\"code\">\n                            <pre>[]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SIMPLE_JWT</td>\n                        <td class=\"code\">\n                            <pre>{&#x27;AUTH_HEADER_TYPES&#x27;: (&#x27;JWT&#x27;,)}</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>STATICFILES_DIRS</td>\n                        <td class=\"code\">\n                            <pre>[]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>STATICFILES_FINDERS</td>\n                        <td class=\"code\">\n                            <pre>[&#x27;django.contrib.staticfiles.finders.FileSystemFinder&#x27;,\n &#x27;django.contrib.staticfiles.finders.AppDirectoriesFinder&#x27;]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>STATICFILES_STORAGE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;django_s3_storage.storage.StaticS3Storage&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>STATIC_ROOT</td>\n                        <td class=\"code\">\n                            <pre>None</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>STATIC_URL</td>\n                        <td class=\"code\">\n                            <pre>&#x27;https://awsanalyzer-dev.s3.amazonaws.com/&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>TEMPLATES</td>\n                        <td class=\"code\">\n                            <pre>[{&#x27;APP_DIRS&#x27;: True,\n  &#x27;BACKEND&#x27;: &#x27;django.template.backends.django.DjangoTemplates&#x27;,\n  &#x27;DIRS&#x27;: [],\n  &#x27;OPTIONS&#x27;: {&#x27;context_processors&#x27;: [&#x27;django.template.context_processors.debug&#x27;,\n                                     &#x27;django.template.context_processors.request&#x27;,\n                                     &#x27;django.contrib.auth.context_processors.auth&#x27;,\n                                     &#x27;django.contrib.messages.context_processors.messages&#x27;]}}]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>TEST_NON_SERIALIZED_APPS</td>\n                        <td class=\"code\">\n                            <pre>[]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>TEST_RUNNER</td>\n                        <td class=\"code\">\n                            <pre>&#x27;django.test.runner.DiscoverRunner&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>THOUSAND_SEPARATOR</td>\n                        <td class=\"code\">\n                            <pre>&#x27;,&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>TIME_FORMAT</td>\n                        <td class=\"code\">\n                            <pre>&#x27;P&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>TIME_INPUT_FORMATS</td>\n                        <td class=\"code\">\n                            <pre>[&#x27;%H:%M:%S&#x27;, &#x27;%H:%M:%S.%f&#x27;, &#x27;%H:%M&#x27;]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>TIME_ZONE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;Asia/Singapore&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>USER_API</td>\n                        <td class=\"code\">\n                            <pre>&#x27;********************&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>USE_I18N</td>\n                        <td class=\"code\">\n                            <pre>True</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>USE_L10N</td>\n                        <td class=\"code\">\n                            <pre>True</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>USE_THOUSAND_SEPARATOR</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>USE_TZ</td>\n                        <td class=\"code\">\n                            <pre>True</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>USE_X_FORWARDED_HOST</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>USE_X_FORWARDED_PORT</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>WSGI_APPLICATION</td>\n                        <td class=\"code\">\n                            <pre>&#x27;config.wsgi.application&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>X_FRAME_OPTIONS</td>\n                        <td class=\"code\">\n                            <pre>&#x27;DENY&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>YEAR_MONTH_FORMAT</td>\n                        <td class=\"code\">\n                            <pre>&#x27;F Y&#x27;</pre>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div id=\"explanation\">\n            <p>\n      You’re seeing this error because you have \n                <code>DEBUG = True</code> in your\n      Django settings file. Change that to\n                <code>False</code>, and Django will\n      display a standard page generated by the handler for this status code.\n            </p>\n        </div>\n    </body>\n</html>"
						}
					]
				},
				{
					"name": "Access Check Get VPCs",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status is 200', () => {",
									"    pm.expect(pm.response).to.have.status(200);",
									"});",
									"",
									"pm.test('Has VpcId', () => {",
									"    let results_list = pm.response.json().results;",
									"    results_list.forEach(data => {",
									"        pm.expect(data).to.have.property('VpcId');",
									"    })",
									"});",
									"",
									"let checkDuplicatesFromList = (list, target_prop) => {",
									"    let store = new Set();",
									"    list.forEach(data => {",
									"        pm.expect(store.has(data[target_prop]), \"No \" + data[target_prop] + 'existed').to.be.false;",
									"        store.add((data[target_prop]))",
									"    });",
									"};",
									"",
									"pm.test('has no duplicates', () => {",
									"    checkDuplicatesFromList(pm.response.json().results, 'VpcId');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{test_access}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host_aws}}/spotainers/get_vpcs/?caid={{test_caid}}&region_code=ap-southeast-1",
							"host": [
								"{{host_aws}}"
							],
							"path": [
								"spotainers",
								"get_vpcs",
								""
							],
							"query": [
								{
									"key": "caid",
									"value": "{{test_caid}}"
								},
								{
									"key": "region_code",
									"value": "ap-southeast-1"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get VPCs",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_aws}}/spotainers/get_vpcs/?caid={{cloud_account_id}}&region_code={{region_code}}",
									"host": [
										"{{host_aws}}"
									],
									"path": [
										"spotainers",
										"get_vpcs",
										""
									],
									"query": [
										{
											"key": "caid",
											"value": "{{cloud_account_id}}"
										},
										{
											"key": "region_code",
											"value": "{{region_code}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 05 Jul 2021 09:36:18 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.6.5"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin"
								},
								{
									"key": "Allow",
									"value": "GET, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "374"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"results\": [\n        {\n            \"CidrBlock\": \"172.31.0.0/16\",\n            \"DhcpOptionsId\": \"dopt-0c6b846a\",\n            \"State\": \"available\",\n            \"VpcId\": \"vpc-3023d756\",\n            \"OwnerId\": \"385105545457\",\n            \"InstanceTenancy\": \"default\",\n            \"IsDefault\": true\n        },\n        {\n            \"CidrBlock\": \"192.168.0.0/16\",\n            \"DhcpOptionsId\": \"dopt-0c6b846a\",\n            \"State\": \"available\",\n            \"VpcId\": \"vpc-0b3265044afb57fce\",\n            \"OwnerId\": \"385105545457\",\n            \"InstanceTenancy\": \"default\",\n            \"IsDefault\": false\n        }\n    ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "Both Correct",
			"item": [
				{
					"name": "Add Anal Incorrect",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"HTTP status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"analyzer_arn is Invalid ARN\", function () {",
									"    pm.expect(pm.response.json()['analyzer_arn'][0]).to.equal(\"Invalid ARN\");",
									"    ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{test_access}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"organization\": \"{{test_org_id}}\",\n    \"bucket\": \"{{bucketName}}\",\n    \"analyzer_arn\": \"blah\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host_user}}/cloud-accounts/{{test_caid}}/",
							"host": [
								"{{host_user}}"
							],
							"path": [
								"cloud-accounts",
								"{{test_caid}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "Save New ECS Account",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"1564894\",\n    \"organization\": \"152\",\n    \"bucket\": \"{{bucketName}}\",\n    \"arn\": \"{{testARN}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host_user}}/cloud-accounts/",
									"host": [
										"{{host_user}}"
									],
									"path": [
										"cloud-accounts",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "173"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Date",
									"value": "Thu, 01 Jul 2021 07:54:01 GMT"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "81fa75fc-b7b4-43a1-a13b-9ce528d4ba5b"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "x-amzn-Remapped-Content-Length",
									"value": "186"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "Bx8nlHJ1SQ0FfCg="
								},
								{
									"key": "Vary",
									"value": "Accept, Origin"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-60dd7496-1a9d36181e8dd63378e023f7;Sampled=1"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "Via",
									"value": "1.1 6ff363ba56d3f8161f6692bcccc7a36d.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "LAX50-C3"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "6bdYkBKaCRvPem0kYLfR4IDQp-hTrz7GDxPa7poxEKxWYWbxuV3wSA=="
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1564894,\n    \"bucket\": \"stompy-dev1-bucket1\",\n    \"arn\": \"arn:aws:iam::385105545457:role/stompy-iam-role-stack-22315084633-StompyFinOpsRole-D7IZKZZ41JO5\",\n    \"aws_status\": false,\n    \"organization\": 152\n}"
						}
					]
				},
				{
					"name": "Check Same AWS Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"HTTP status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"AWS Status is True\", function () {",
									"    pm.expect(pm.response.json()['arn_status']['analyzer']) .to.be.false;",
									"     pm.expect(pm.response.json()['arn_status']['spotainer']) .to.be.true;",
									"});",
									"pm.test(\"Has keys id, old_id, bucket, analyzer_arn, spotainer_arn, aws_status, organization\", ()=>{",
									"    pm.expect(pm.response.json()).to.have.all.keys('id', 'old_id', 'bucket', 'analyzer_arn', 'spotainer_arn','arn_status', 'organization');",
									"    pm.expect(pm.response.json().bucket).to.eql( pm.environment.get('bucketName'));",
									"    pm.expect(pm.response.json().analyzer_arn).to.eql(null);",
									"    pm.expect(pm.response.json().spotainer_arn).to.eql(pm.environment.get('spotARN'));",
									"    pm.expect(pm.response.json().id) .to.eql(pm.environment.get('test_caid'));",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{test_access}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host_user}}/cloud-accounts/{{test_caid}}/",
							"host": [
								"{{host_user}}"
							],
							"path": [
								"cloud-accounts",
								"{{test_caid}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "Check Success AWS Status",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{test_access}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host_user}}/cloud-accounts/{{test_caid}}/",
									"host": [
										"{{host_user}}"
									],
									"path": [
										"cloud-accounts",
										"{{test_caid}}",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "174"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Date",
									"value": "Wed, 07 Jul 2021 05:06:31 GMT"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "65b26d2e-ecd8-4b9a-bb7c-13dc1dea1e6f"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Allow",
									"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
								},
								{
									"key": "x-amzn-Remapped-Content-Length",
									"value": "187"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "CFVtYHSDSQ0FpOg="
								},
								{
									"key": "Vary",
									"value": "Accept, Origin"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-60e53655-52090be114d1e1fa696fbe6b;Sampled=1"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "Via",
									"value": "1.1 ba055a10d278614dad75399031edff3c.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "MRS52-C2"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "593UX8u24QnxQIKSBbu4m5GZNrYswhyFm2QT3zmN98GLskDA61Db5w=="
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 17,\n    \"old_id\": null,\n    \"bucket\": \"stompycursingapore\",\n    \"arn\": \"arn:aws:iam::385105545457:role/stompy-iam-role-stack-noelDev-StompyFinOpsRole-BECYKKB5NVPO\",\n    \"aws_status\": true,\n    \"organization\": 6\n}"
						}
					]
				},
				{
					"name": "Add Anal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"HTTP status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"AWS Status is True\", function () {",
									"    pm.expect(pm.response.json()['arn_status']['analyzer']) .to.be.true;",
									"     pm.expect(pm.response.json()['arn_status']['spotainer']) .to.be.true;",
									"});",
									"pm.test(\"Has keys id, old_id, bucket, analyzer_arn, spotainer_arn, aws_status, organization\", ()=>{",
									"    pm.expect(pm.response.json()).to.have.all.keys('id', 'old_id', 'bucket', 'analyzer_arn', 'spotainer_arn','arn_status', 'organization');",
									"    pm.expect(pm.response.json().bucket).to.eql( pm.environment.get('bucketName'));",
									"    pm.expect(pm.response.json().analyzer_arn).to.eql(pm.environment.get('testARN'));",
									"    pm.expect(pm.response.json().spotainer_arn).to.eql(pm.environment.get('spotARN'));",
									"",
									"});",
									"pm.environment.set('test_caid', pm.response.json().id)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{test_access}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"organization\": \"{{test_org_id}}\",\n    \"bucket\": \"{{bucketName}}\",\n    \"analyzer_arn\": \"{{testARN}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host_user}}/cloud-accounts/{{test_caid}}/",
							"host": [
								"{{host_user}}"
							],
							"path": [
								"cloud-accounts",
								"{{test_caid}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "Save New ECS Account",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"1564894\",\n    \"organization\": \"152\",\n    \"bucket\": \"{{bucketName}}\",\n    \"arn\": \"{{testARN}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host_user}}/cloud-accounts/",
									"host": [
										"{{host_user}}"
									],
									"path": [
										"cloud-accounts",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "173"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Date",
									"value": "Thu, 01 Jul 2021 07:54:01 GMT"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "81fa75fc-b7b4-43a1-a13b-9ce528d4ba5b"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "x-amzn-Remapped-Content-Length",
									"value": "186"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "Bx8nlHJ1SQ0FfCg="
								},
								{
									"key": "Vary",
									"value": "Accept, Origin"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-60dd7496-1a9d36181e8dd63378e023f7;Sampled=1"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "Via",
									"value": "1.1 6ff363ba56d3f8161f6692bcccc7a36d.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "LAX50-C3"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "6bdYkBKaCRvPem0kYLfR4IDQp-hTrz7GDxPa7poxEKxWYWbxuV3wSA=="
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1564894,\n    \"bucket\": \"stompy-dev1-bucket1\",\n    \"arn\": \"arn:aws:iam::385105545457:role/stompy-iam-role-stack-22315084633-StompyFinOpsRole-D7IZKZZ41JO5\",\n    \"aws_status\": false,\n    \"organization\": 152\n}"
						}
					]
				},
				{
					"name": "AWS Accounts Success Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 or 204\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200,204]);",
									"});",
									"",
									"pm.test(\"results has Id, name, isRoot\",()=>{",
									"    let results = pm.response.json().results;",
									"    if (results != undefined && results.length){",
									"        //check the last element in the array so that we don't only check first element",
									"        pm.expect(results[results.length-1]).to.have.property('Id');",
									"        pm.expect(results[0]).to.have.property('Name');",
									"        pm.expect(results[results.length-1]).to.have.property('isRoot');",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{test_access}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host_aws}}/organizations/list-accounts/?caid={{test_caid}}",
							"host": [
								"{{host_aws}}"
							],
							"path": [
								"organizations",
								"list-accounts",
								""
							],
							"query": [
								{
									"key": "caid",
									"value": "{{test_caid}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "AWS Accounts",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjI1MDQzMzUyLCJqdGkiOiJhZWY3ZDI2Y2Q2MTc0ZmZkYWUyYWQyZGNkNWI4NTAwZSIsInVzZXJfaWQiOjIsImNhaWQiOjF9.RODNBg9YDOIzmiGqD92dD605Q00i55P6v-f18XqYMGc",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_aws}}/organizations/list-accounts/?caid={{cloud_account_id}}",
									"host": [
										"{{host_aws}}"
									],
									"path": [
										"organizations",
										"list-accounts",
										""
									],
									"query": [
										{
											"key": "caid",
											"value": "{{cloud_account_id}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 30 Jun 2021 08:06:43 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.6.5"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin"
								},
								{
									"key": "Allow",
									"value": "GET, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "178"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"results\": [\n        {\n            \"Id\": \"263078123597\",\n            \"Name\": \"MR332\",\n            \"isRoot\": false\n        },\n        {\n            \"Id\": \"254378262586\",\n            \"Name\": \"Stompy_test\",\n            \"isRoot\": false\n        },\n        {\n            \"Id\": \"385105545457\",\n            \"Name\": \"Stompy.io\",\n            \"isRoot\": true\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Check Success AWS Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"HTTP status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"AWS Status is True\", function () {",
									"    pm.expect(pm.response.json()['arn_status']['analyzer']) .to.be.true;",
									"     pm.expect(pm.response.json()['arn_status']['spotainer']) .to.be.true;",
									"});",
									"pm.test(\"Has keys id, old_id, bucket, analyzer_arn, spotainer_arn, aws_status, organization\", ()=>{",
									"    pm.expect(pm.response.json()).to.have.all.keys('id', 'old_id', 'bucket', 'analyzer_arn', 'spotainer_arn','arn_status', 'organization');",
									"    pm.expect(pm.response.json().bucket).to.eql( pm.environment.get('bucketName'));",
									"    pm.expect(pm.response.json().analyzer_arn).to.eql(pm.environment.get('testARN'));",
									"    pm.expect(pm.response.json().spotainer_arn).to.eql(pm.environment.get('spotARN'));",
									"    pm.expect(pm.response.json().id) .to.eql(pm.environment.get('test_caid'));",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{test_access}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host_user}}/cloud-accounts/{{test_caid}}/",
							"host": [
								"{{host_user}}"
							],
							"path": [
								"cloud-accounts",
								"{{test_caid}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "Check Success AWS Status Copy 2",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{test_access}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host_user}}/cloud-accounts/{{test_caid}}/",
									"host": [
										"{{host_user}}"
									],
									"path": [
										"cloud-accounts",
										"{{test_caid}}",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "249"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Date",
									"value": "Fri, 30 Jul 2021 07:42:26 GMT"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "00a8c867-97b1-4452-8a60-2f9444e55916"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Allow",
									"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
								},
								{
									"key": "x-amzn-Remapped-Content-Length",
									"value": "329"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "DRgHHFePyQ0FWwA="
								},
								{
									"key": "Vary",
									"value": "Accept, Origin"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-6103ad60-4b3dbcd57694f67f3769eace;Sampled=1"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "Via",
									"value": "1.1 dbe78e2023474e6ccd1ec5919be26772.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "CGK52-C1"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "1CaEFcq_EqeEsrkSYp_5wUOg47TVfI5MipuYKlwSaGAS5htGwTh3vw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 37,\n    \"old_id\": null,\n    \"bucket\": \"stompycursingapore\",\n    \"analyzer_arn\": \"arn:aws:iam::385105545457:role/stompy-iam-role-stack-noelDev-StompyFinOpsRole-BECYKKB5NVPO\",\n    \"spotainer_arn\": \"arn:aws:iam::263078123597:role/Centurion-Spotainer-Dev-SpoTainerRole-1SCY2KX1KCPWI\",\n    \"arn_status\": {\n        \"analyzer\": true,\n        \"spotainer\": false\n    },\n    \"organization\": 37\n}"
						}
					]
				},
				{
					"name": "Access Check Get VPCs",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status is 200', () => {",
									"    pm.expect(pm.response).to.have.status(200);",
									"});",
									"",
									"pm.test('Has VpcId', () => {",
									"    let results_list = pm.response.json().results;",
									"    results_list.forEach(data => {",
									"        pm.expect(data).to.have.property('VpcId');",
									"    })",
									"});",
									"",
									"let checkDuplicatesFromList = (list, target_prop) => {",
									"    let store = new Set();",
									"    list.forEach(data => {",
									"        pm.expect(store.has(data[target_prop]), \"No \" + data[target_prop] + 'existed').to.be.false;",
									"        store.add((data[target_prop]))",
									"    });",
									"};",
									"",
									"pm.test('has no duplicates', () => {",
									"    checkDuplicatesFromList(pm.response.json().results, 'VpcId');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{test_access}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host_aws}}/spotainers/get_vpcs/?caid={{test_caid}}&region_code=ap-southeast-1",
							"host": [
								"{{host_aws}}"
							],
							"path": [
								"spotainers",
								"get_vpcs",
								""
							],
							"query": [
								{
									"key": "caid",
									"value": "{{test_caid}}"
								},
								{
									"key": "region_code",
									"value": "ap-southeast-1"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get VPCs",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_aws}}/spotainers/get_vpcs/?caid={{cloud_account_id}}&region_code={{region_code}}",
									"host": [
										"{{host_aws}}"
									],
									"path": [
										"spotainers",
										"get_vpcs",
										""
									],
									"query": [
										{
											"key": "caid",
											"value": "{{cloud_account_id}}"
										},
										{
											"key": "region_code",
											"value": "{{region_code}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 05 Jul 2021 09:36:18 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.6.5"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin"
								},
								{
									"key": "Allow",
									"value": "GET, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "374"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"results\": [\n        {\n            \"CidrBlock\": \"172.31.0.0/16\",\n            \"DhcpOptionsId\": \"dopt-0c6b846a\",\n            \"State\": \"available\",\n            \"VpcId\": \"vpc-3023d756\",\n            \"OwnerId\": \"385105545457\",\n            \"InstanceTenancy\": \"default\",\n            \"IsDefault\": true\n        },\n        {\n            \"CidrBlock\": \"192.168.0.0/16\",\n            \"DhcpOptionsId\": \"dopt-0c6b846a\",\n            \"State\": \"available\",\n            \"VpcId\": \"vpc-0b3265044afb57fce\",\n            \"OwnerId\": \"385105545457\",\n            \"InstanceTenancy\": \"default\",\n            \"IsDefault\": false\n        }\n    ]\n}"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "test_mail_pairs",
			"value": ""
		},
		{
			"key": "token",
			"value": ""
		}
	]
}