{
	"info": {
		"_postman_id": "c2860b00-18e5-4b37-9ccf-8a9b41d5b251",
		"name": "Cross-referencing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "health check",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"HTTP status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Status code is 0\", function () {",
							"    pm.expect(pm.response.json()['code']).equals(0);",
							"});",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.json()['msg']).to.equal( \"hello world\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "MyUniqueApiKey",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}",
					"host": [
						"{{host}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "login /login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"HTTP status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Status code is 0\", function () {",
							"    pm.expect(pm.response.json()['code']).to.equal(0);",
							"});",
							"pm.environment.set(\"org_id\", pm.response.json()['data']['org_id']);",
							"pm.environment.set(\"scc_id\", pm.response.json()['data']['scc_id']);",
							"pm.environment.set(\"ecs_id\", pm.response.json()['data']['ecs_id']);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{testUser}}\", \n    \"password\": \"Secret123!\", \n    \"auto_login\": true\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/login",
					"host": [
						"{{host}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Costs Analysis /analyze_cost",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"HTTP status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Status code is 0\", function () {",
							"    pm.expect(pm.response.json()['code']).to.equal(0);",
							"});",
							"pm.collectionVariables.set('waste_13_months', pm.response.json()['data']['waste_last_13_months']);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"scc_id\": {{scc_id}}, \n    \"org_id\": \"{{org_id}}\", \n    \"ecs_id\": \"{{ecs_id}}\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/analyze_cost",
					"host": [
						"{{host}}"
					],
					"path": [
						"analyze_cost"
					]
				}
			},
			"response": []
		},
		{
			"name": "Reservations /reservations",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"HTTP status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Status code is 0\", function () {",
							"    pm.expect(pm.response.json()['code']).to.equal(0);",
							"});",
							"",
							"function getSum(service_data){",
							"    let sum = 0;",
							"    for(let i = 0; i < service_data.length; i++){",
							"        sum+=service_data[i]['ri_cost_for_unused_hours'];",
							"    }",
							"    return sum;",
							"}",
							"",
							"",
							"pm.test(\"reserved instance all time waste equals waste in 13 months\", ()=>{",
							"    let all_time_ri_waste_data = pm.response.json()['data']['reserved_instance_all_time_waste'];",
							"    ",
							"    let ec2_sum =  getSum(all_time_ri_waste_data['EC2']);",
							"    let ElastiCache_sum =  getSum(all_time_ri_waste_data['ElastiCache']);",
							"    let ElasticSearch_sum =  getSum(all_time_ri_waste_data['ElasticSearch']);",
							"    let RDS_sum =  getSum(all_time_ri_waste_data['RDS']);",
							"    let Redshift_sum =  getSum(all_time_ri_waste_data['Redshift']);",
							"",
							"    let ri_waste_sum = ec2_sum + ElastiCache_sum + ElasticSearch_sum + RDS_sum+ Redshift_sum;",
							"    pm.expect(ri_waste_sum).to.equal(pm.collectionVariables.get('waste_13_months'))",
							"",
							"    ",
							"    ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"scc_id\": {{scc_id}},\n    \"org_id\": \"{{org_id}}\",\n    \"ecs_id\": \"{{ecs_id}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/reservations",
					"host": [
						"{{host}}"
					],
					"path": [
						"reservations"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "http://v1.flask.api.stompy.io"
		},
		{
			"key": "testUser",
			"value": "cavemoh105@64ge.com"
		},
		{
			"key": "waste_13_months",
			"value": ""
		}
	]
}